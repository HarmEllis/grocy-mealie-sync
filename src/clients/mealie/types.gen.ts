// This file is auto-generated by @hey-api/openapi-ts

export type AdminAboutInfo = {
    production: boolean;
    version: string;
    demoStatus: boolean;
    allowSignup: boolean;
    defaultGroupSlug?: string | null;
    defaultHouseholdSlug?: string | null;
    enableOidc: boolean;
    oidcRedirect: boolean;
    oidcProviderName: string;
    enableOpenai: boolean;
    enableOpenaiImageServices: boolean;
    versionLatest: string;
    apiPort: number;
    apiDocs: boolean;
    dbType: string;
    dbUrl?: string | null;
    defaultGroup: string;
    defaultHousehold: string;
    buildId: string;
    recipeScraperVersion: string;
};

export type AllBackups = {
    imports: Array<BackupFile>;
    templates: Array<string>;
};

export type AppInfo = {
    production: boolean;
    version: string;
    demoStatus: boolean;
    allowSignup: boolean;
    defaultGroupSlug?: string | null;
    defaultHouseholdSlug?: string | null;
    enableOidc: boolean;
    oidcRedirect: boolean;
    oidcProviderName: string;
    enableOpenai: boolean;
    enableOpenaiImageServices: boolean;
};

export type AppStartupInfo = {
    isFirstLogin: boolean;
    isDemo: boolean;
};

export type AppStatistics = {
    totalRecipes: number;
    totalUsers: number;
    totalHouseholds: number;
    totalGroups: number;
    uncategorizedRecipes: number;
    untaggedRecipes: number;
};

export type AppTheme = {
    lightPrimary?: string;
    lightAccent?: string;
    lightSecondary?: string;
    lightSuccess?: string;
    lightInfo?: string;
    lightWarning?: string;
    lightError?: string;
    darkPrimary?: string;
    darkAccent?: string;
    darkSecondary?: string;
    darkSuccess?: string;
    darkInfo?: string;
    darkWarning?: string;
    darkError?: string;
};

export type AssignCategories = {
    recipes: Array<string>;
    categories: Array<CategoryBase>;
};

export type AssignSettings = {
    recipes: Array<string>;
    settings: RecipeSettings;
};

export type AssignTags = {
    recipes: Array<string>;
    tags: Array<TagBase>;
};

export type AuthMethod = 'Mealie' | 'LDAP' | 'OIDC';

export type BackupFile = {
    name: string;
    date: string;
    size: string;
};

export type BodyCreateRecipeFromImageApiRecipesCreateImagePost = {
    images: Array<Blob | File>;
};

export type BodyCreateRecipeFromZipApiRecipesCreateZipPost = {
    archive: Blob | File;
};

export type BodyDebugOpenaiApiAdminDebugOpenaiPost = {
    image?: (Blob | File) | null;
};

export type BodyGetTokenApiAuthTokenPost = {
    username?: string;
    password?: string;
    remember_me?: boolean;
};

export type BodyStartDataMigrationApiGroupsMigrationsPost = {
    add_migration_tag?: boolean;
    migration_type: SupportedMigrations;
    archive: Blob | File;
};

export type BodyUpdateEventImageApiRecipesTimelineEventsItemIdImagePut = {
    image: Blob | File;
    extension: string;
};

export type BodyUpdateRecipeImageApiRecipesSlugImagePut = {
    image: Blob | File;
    extension: string;
};

export type BodyUpdateUserImageApiUsersIdImagePost = {
    profile: Blob | File;
};

export type BodyUploadOneApiAdminBackupsUploadPost = {
    archive: Blob | File;
};

export type BodyUploadRecipeAssetApiRecipesSlugAssetsPost = {
    name: string;
    icon: string;
    extension: string;
    file: Blob | File;
};

export type CategoryBase = {
    name: string;
    id: string;
    slug: string;
};

export type CategoryIn = {
    name: string;
};

export type CategoryOut = {
    name: string;
    id: string;
    slug: string;
    groupId: string;
};

export type CategorySummary = {
    id: string;
    slug: string;
    name: string;
};

export type ChangePassword = {
    currentPassword?: string;
    newPassword: string;
};

export type CheckAppConfig = {
    emailReady: boolean;
    ldapReady: boolean;
    oidcReady: boolean;
    enableOpenai: boolean;
    baseUrlSet: boolean;
    isUpToDate: boolean;
};

export type CookBookPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<ReadCookBook>;
    next?: string | null;
    previous?: string | null;
};

export type CreateCookBook = {
    name: string;
    description?: string;
    slug?: string | null;
    position?: number;
    public?: boolean;
    queryFilterString?: string;
};

export type CreateGroupRecipeAction = {
    actionType: GroupRecipeActionType;
    title: string;
    url: string;
};

export type CreateIngredientFood = {
    id?: string | null;
    name: string;
    pluralName?: string | null;
    description?: string;
    extras?: {
        [key: string]: unknown;
    } | null;
    labelId?: string | null;
    aliases?: Array<CreateIngredientFoodAlias>;
    householdsWithIngredientFood?: Array<string>;
};

export type CreateIngredientFoodAlias = {
    name: string;
};

export type CreateIngredientUnit = {
    id?: string | null;
    name: string;
    pluralName?: string | null;
    description?: string;
    extras?: {
        [key: string]: unknown;
    } | null;
    fraction?: boolean;
    abbreviation?: string;
    pluralAbbreviation?: string | null;
    useAbbreviation?: boolean;
    aliases?: Array<CreateIngredientUnitAlias>;
};

export type CreateIngredientUnitAlias = {
    name: string;
};

export type CreateInviteToken = {
    uses: number;
    groupId?: string | null;
    householdId?: string | null;
};

export type CreatePlanEntry = {
    date: string;
    entryType?: PlanEntryType;
    title?: string;
    text?: string;
    recipeId?: string | null;
};

export type CreateRandomEntry = {
    date: string;
    entryType?: PlanEntryType;
};

export type CreateRecipe = {
    name: string;
};

export type CreateRecipeBulk = {
    url: string;
    categories?: Array<RecipeCategory> | null;
    tags?: Array<RecipeTag> | null;
};

export type CreateRecipeByUrlBulk = {
    imports: Array<CreateRecipeBulk>;
};

export type CreateUserRegistration = {
    group?: string | null;
    household?: string | null;
    groupToken?: string | null;
    email: string;
    username: string;
    fullName: string;
    password: string;
    passwordConfirm: string;
    advanced?: boolean;
    private?: boolean;
    seedData?: boolean;
    locale?: string;
};

export type CreateWebhook = {
    enabled?: boolean;
    name?: string;
    url?: string;
    webhookType?: WebhookType;
    scheduledTime: string;
};

export type DebugResponse = {
    success: boolean;
    response?: string | null;
};

export type DeleteRecipes = {
    recipes: Array<string>;
};

export type DeleteTokenResponse = {
    tokenDelete: string;
};

export type EmailInitationResponse = {
    success: boolean;
    error?: string | null;
};

export type EmailInvitation = {
    email: string;
    token: string;
};

export type EmailReady = {
    ready: boolean;
};

export type EmailSuccess = {
    success: boolean;
    error?: string | null;
};

export type EmailTest = {
    email: string;
};

export type ExportRecipes = {
    recipes: Array<string>;
    exportType?: ExportTypes;
};

export type ExportTypes = 'json';

export type FileTokenResponse = {
    fileToken: string;
};

export type ForgotPassword = {
    email: string;
};

export type FormatResponse = {
    json: Array<string>;
    zip: Array<string>;
    jinja2: Array<string>;
};

export type GroupAdminUpdate = {
    id: string;
    name: string;
    preferences?: UpdateGroupPreferences | null;
};

export type GroupBase = {
    name: string;
};

export type GroupDataExport = {
    id: string;
    groupId: string;
    name: string;
    filename: string;
    path: string;
    size: string;
    expires: string;
};

export type GroupEventNotifierCreate = {
    name: string;
    appriseUrl?: string | null;
};

/**
 * These events are in-sync with the EventTypes found in the EventBusService.
 * If you modify this, make sure to update the EventBusService as well.
 */
export type GroupEventNotifierOptions = {
    testMessage?: boolean;
    webhookTask?: boolean;
    recipeCreated?: boolean;
    recipeUpdated?: boolean;
    recipeDeleted?: boolean;
    userSignup?: boolean;
    dataMigrations?: boolean;
    dataExport?: boolean;
    dataImport?: boolean;
    mealplanEntryCreated?: boolean;
    shoppingListCreated?: boolean;
    shoppingListUpdated?: boolean;
    shoppingListDeleted?: boolean;
    cookbookCreated?: boolean;
    cookbookUpdated?: boolean;
    cookbookDeleted?: boolean;
    tagCreated?: boolean;
    tagUpdated?: boolean;
    tagDeleted?: boolean;
    categoryCreated?: boolean;
    categoryUpdated?: boolean;
    categoryDeleted?: boolean;
};

export type GroupEventNotifierOptionsOut = {
    testMessage?: boolean;
    webhookTask?: boolean;
    recipeCreated?: boolean;
    recipeUpdated?: boolean;
    recipeDeleted?: boolean;
    userSignup?: boolean;
    dataMigrations?: boolean;
    dataExport?: boolean;
    dataImport?: boolean;
    mealplanEntryCreated?: boolean;
    shoppingListCreated?: boolean;
    shoppingListUpdated?: boolean;
    shoppingListDeleted?: boolean;
    cookbookCreated?: boolean;
    cookbookUpdated?: boolean;
    cookbookDeleted?: boolean;
    tagCreated?: boolean;
    tagUpdated?: boolean;
    tagDeleted?: boolean;
    categoryCreated?: boolean;
    categoryUpdated?: boolean;
    categoryDeleted?: boolean;
    id: string;
};

export type GroupEventNotifierOut = {
    id: string;
    name: string;
    enabled: boolean;
    groupId: string;
    householdId: string;
    options: GroupEventNotifierOptionsOut;
};

export type GroupEventNotifierUpdate = {
    name: string;
    appriseUrl?: string | null;
    enabled?: boolean;
    groupId: string;
    householdId: string;
    options?: GroupEventNotifierOptions;
    id: string;
};

export type GroupEventPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<GroupEventNotifierOut>;
    next?: string | null;
    previous?: string | null;
};

export type GroupHouseholdSummary = {
    id: string;
    name: string;
};

export type GroupInDb = {
    name: string;
    id: string;
    slug: string;
    categories?: Array<CategoryBase> | null;
    webhooks?: Array<ReadWebhook>;
    households?: Array<GroupHouseholdSummary> | null;
    users?: Array<UserSummary> | null;
    preferences?: ReadGroupPreferences | null;
};

export type GroupPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<GroupInDb>;
    next?: string | null;
    previous?: string | null;
};

export type GroupRecipeActionOut = {
    actionType: GroupRecipeActionType;
    title: string;
    url: string;
    groupId: string;
    householdId: string;
    id: string;
};

export type GroupRecipeActionPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<GroupRecipeActionOut>;
    next?: string | null;
    previous?: string | null;
};

export type GroupRecipeActionType = 'link' | 'post';

export type GroupStorage = {
    usedStorageBytes: number;
    usedStorageStr: string;
    totalStorageBytes: number;
    totalStorageStr: string;
};

export type GroupSummary = {
    name: string;
    id: string;
    slug: string;
    preferences?: ReadGroupPreferences | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type HouseholdCreate = {
    groupId?: string | null;
    name: string;
};

export type HouseholdInDb = {
    groupId: string;
    name: string;
    id: string;
    slug: string;
    preferences?: ReadHouseholdPreferences | null;
    group: string;
    users?: Array<HouseholdUserSummary> | null;
    webhooks?: Array<ReadWebhook>;
};

export type HouseholdPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<HouseholdInDb>;
    next?: string | null;
    previous?: string | null;
};

export type HouseholdRecipeSummary = {
    lastMade?: string | null;
    recipeId: string;
};

export type HouseholdStatistics = {
    totalRecipes: number;
    totalUsers: number;
    totalCategories: number;
    totalTags: number;
    totalTools: number;
};

export type HouseholdSummary = {
    groupId: string;
    name: string;
    id: string;
    slug: string;
    preferences?: ReadHouseholdPreferences | null;
};

export type HouseholdUserSummary = {
    id: string;
    fullName: string;
};

export type ImageType = 'original.webp' | 'min-original.webp' | 'tiny-original.webp';

export type IngredientConfidence = {
    average?: number | null;
    comment?: number | null;
    name?: number | null;
    unit?: number | null;
    quantity?: number | null;
    food?: number | null;
};

export type IngredientFoodInput = {
    id: string;
    name: string;
    pluralName?: string | null;
    description?: string;
    extras?: {
        [key: string]: unknown;
    } | null;
    labelId?: string | null;
    aliases?: Array<IngredientFoodAlias>;
    householdsWithIngredientFood?: Array<string>;
    label?: MultiPurposeLabelSummary | null;
    createdAt?: string | null;
    update_at?: string | null;
};

export type IngredientFoodOutput = {
    id: string;
    name: string;
    pluralName?: string | null;
    description?: string;
    extras?: {
        [key: string]: unknown;
    } | null;
    labelId?: string | null;
    aliases?: Array<IngredientFoodAlias>;
    householdsWithIngredientFood?: Array<string>;
    label?: MultiPurposeLabelSummary | null;
    createdAt?: string | null;
    updatedAt?: string | null;
};

export type IngredientFoodAlias = {
    name: string;
};

export type IngredientFoodPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<IngredientFoodOutput>;
    next?: string | null;
    previous?: string | null;
};

/**
 * A list of ingredient references.
 */
export type IngredientReferences = {
    referenceId?: string | null;
};

export type IngredientRequest = {
    parser?: RegisteredParser;
    ingredient: string;
};

export type IngredientUnitInput = {
    id: string;
    name: string;
    pluralName?: string | null;
    description?: string;
    extras?: {
        [key: string]: unknown;
    } | null;
    fraction?: boolean;
    abbreviation?: string;
    pluralAbbreviation?: string | null;
    useAbbreviation?: boolean;
    aliases?: Array<IngredientUnitAlias>;
    createdAt?: string | null;
    update_at?: string | null;
};

export type IngredientUnitOutput = {
    id: string;
    name: string;
    pluralName?: string | null;
    description?: string;
    extras?: {
        [key: string]: unknown;
    } | null;
    fraction?: boolean;
    abbreviation?: string;
    pluralAbbreviation?: string | null;
    useAbbreviation?: boolean;
    aliases?: Array<IngredientUnitAlias>;
    createdAt?: string | null;
    updatedAt?: string | null;
};

export type IngredientUnitAlias = {
    name: string;
};

export type IngredientUnitPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<IngredientUnitOutput>;
    next?: string | null;
    previous?: string | null;
};

export type IngredientsRequest = {
    parser?: RegisteredParser;
    ingredients: Array<string>;
};

export type LogicalOperator = 'AND' | 'OR';

/**
 * Should ONLY be used when creating a new token, as the token field is sensitive
 */
export type LongLiveTokenCreateResponse = {
    name: string;
    id: number;
    createdAt?: string | null;
    token: string;
};

export type LongLiveTokenIn = {
    name: string;
    integrationId?: string;
};

export type LongLiveTokenOut = {
    name: string;
    id: number;
    createdAt?: string | null;
};

export type MaintenanceStorageDetails = {
    tempDirSize: string;
    backupsDirSize: string;
    groupsDirSize: string;
    recipesDirSize: string;
    userDirSize: string;
};

export type MaintenanceSummary = {
    dataDirSize: string;
    cleanableImages: number;
    cleanableDirs: number;
};

export type MergeFood = {
    fromFood: string;
    toFood: string;
};

export type MergeUnit = {
    fromUnit: string;
    toUnit: string;
};

export type MultiPurposeLabelCreate = {
    name: string;
    color?: string;
};

export type MultiPurposeLabelOut = {
    name: string;
    color?: string;
    groupId: string;
    id: string;
};

export type MultiPurposeLabelPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<MultiPurposeLabelSummary>;
    next?: string | null;
    previous?: string | null;
};

export type MultiPurposeLabelSummary = {
    name: string;
    color?: string;
    groupId: string;
    id: string;
};

export type MultiPurposeLabelUpdate = {
    name: string;
    color?: string;
    groupId: string;
    id: string;
};

export type Nutrition = {
    calories?: string | null;
    carbohydrateContent?: string | null;
    cholesterolContent?: string | null;
    fatContent?: string | null;
    fiberContent?: string | null;
    proteinContent?: string | null;
    saturatedFatContent?: string | null;
    sodiumContent?: string | null;
    sugarContent?: string | null;
    transFatContent?: string | null;
    unsaturatedFatContent?: string | null;
};

export type OrderByNullPosition = 'first' | 'last';

export type OrderDirection = 'asc' | 'desc';

export type PaginationBaseHouseholdSummary = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<HouseholdSummary>;
    next?: string | null;
    previous?: string | null;
};

export type PaginationBaseIngredientFood = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<IngredientFoodOutput>;
    next?: string | null;
    previous?: string | null;
};

export type PaginationBaseReadCookBook = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<ReadCookBook>;
    next?: string | null;
    previous?: string | null;
};

export type PaginationBaseRecipeCategory = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeCategory>;
    next?: string | null;
    previous?: string | null;
};

export type PaginationBaseRecipeSummary = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeSummary>;
    next?: string | null;
    previous?: string | null;
};

export type PaginationBaseRecipeTag = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeTag>;
    next?: string | null;
    previous?: string | null;
};

export type PaginationBaseRecipeTool = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeTool>;
    next?: string | null;
    previous?: string | null;
};

export type PaginationBaseUserOut = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<UserOut>;
    next?: string | null;
    previous?: string | null;
};

export type PaginationBaseUserSummary = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<UserSummary>;
    next?: string | null;
    previous?: string | null;
};

export type ParsedIngredient = {
    input?: string | null;
    confidence?: IngredientConfidence;
    ingredient: RecipeIngredientOutput;
};

export type PasswordResetToken = {
    token: string;
};

export type PlanEntryPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<ReadPlanEntry>;
    next?: string | null;
    previous?: string | null;
};

export type PlanEntryType = 'breakfast' | 'lunch' | 'dinner' | 'side';

export type PlanRulesCreate = {
    day?: PlanRulesDay;
    entryType?: PlanRulesType;
    queryFilterString?: string;
};

export type PlanRulesDay = 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday' | 'unset';

export type PlanRulesOut = {
    day?: PlanRulesDay;
    entryType?: PlanRulesType;
    queryFilterString?: string;
    groupId: string;
    householdId: string;
    id: string;
    queryFilter?: QueryFilterJson;
};

export type PlanRulesPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<PlanRulesOut>;
    next?: string | null;
    previous?: string | null;
};

export type PlanRulesType = 'breakfast' | 'lunch' | 'dinner' | 'side' | 'unset';

export type QueryFilterJson = {
    parts?: Array<QueryFilterJsonPart>;
};

export type QueryFilterJsonPart = {
    leftParenthesis?: string | null;
    rightParenthesis?: string | null;
    logicalOperator?: LogicalOperator | null;
    attributeName?: string | null;
    relationalOperator?: RelationalKeyword | RelationalOperator | null;
    value?: string | Array<string> | null;
};

export type ReadCookBook = {
    name: string;
    description?: string;
    slug?: string | null;
    position?: number;
    public?: boolean;
    queryFilterString?: string;
    groupId: string;
    householdId: string;
    id: string;
    queryFilter?: QueryFilterJson;
};

export type ReadGroupPreferences = {
    privateGroup?: boolean;
    groupId: string;
    id: string;
};

export type ReadHouseholdPreferences = {
    privateHousehold?: boolean;
    lockRecipeEditsFromOtherHouseholds?: boolean;
    firstDayOfWeek?: number;
    recipePublic?: boolean;
    recipeShowNutrition?: boolean;
    recipeShowAssets?: boolean;
    recipeLandscapeView?: boolean;
    recipeDisableComments?: boolean;
    recipeDisableAmount?: boolean;
    id: string;
};

export type ReadInviteToken = {
    token: string;
    usesLeft: number;
    groupId: string;
    householdId: string;
};

export type ReadPlanEntry = {
    date: string;
    entryType?: PlanEntryType;
    title?: string;
    text?: string;
    recipeId?: string | null;
    id: number;
    groupId: string;
    userId: string;
    householdId: string;
    recipe?: RecipeSummary | null;
};

export type ReadWebhook = {
    enabled?: boolean;
    name?: string;
    url?: string;
    webhookType?: WebhookType;
    scheduledTime: string;
    groupId: string;
    householdId: string;
    id: string;
};

export type RecipeInput = {
    id?: string | null;
    userId?: string;
    householdId?: string;
    groupId?: string;
    name?: string | null;
    slug?: string;
    image?: unknown | null;
    recipeServings?: number;
    recipeYieldQuantity?: number;
    recipeYield?: string | null;
    totalTime?: string | null;
    prepTime?: string | null;
    cookTime?: string | null;
    performTime?: string | null;
    description?: string | null;
    recipeCategory?: Array<RecipeCategory> | null;
    tags?: Array<RecipeTag> | null;
    tools?: Array<RecipeTool>;
    rating?: number | null;
    orgURL?: string | null;
    dateAdded?: string | null;
    dateUpdated?: string | null;
    createdAt?: string | null;
    update_at?: string | null;
    lastMade?: string | null;
    recipeIngredient?: Array<RecipeIngredientInput>;
    recipeInstructions?: Array<RecipeStep> | null;
    nutrition?: Nutrition | null;
    settings?: RecipeSettings | null;
    assets?: Array<RecipeAsset> | null;
    notes?: Array<RecipeNote> | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    comments?: Array<RecipeCommentOutInput> | null;
};

export type RecipeOutput = {
    id?: string | null;
    userId?: string;
    householdId?: string;
    groupId?: string;
    name?: string | null;
    slug?: string;
    image?: unknown | null;
    recipeServings?: number;
    recipeYieldQuantity?: number;
    recipeYield?: string | null;
    totalTime?: string | null;
    prepTime?: string | null;
    cookTime?: string | null;
    performTime?: string | null;
    description?: string | null;
    recipeCategory?: Array<RecipeCategory> | null;
    tags?: Array<RecipeTag> | null;
    tools?: Array<RecipeTool>;
    rating?: number | null;
    orgURL?: string | null;
    dateAdded?: string | null;
    dateUpdated?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    lastMade?: string | null;
    recipeIngredient?: Array<RecipeIngredientOutput>;
    recipeInstructions?: Array<RecipeStep> | null;
    nutrition?: Nutrition | null;
    settings?: RecipeSettings | null;
    assets?: Array<RecipeAsset> | null;
    notes?: Array<RecipeNote> | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    comments?: Array<RecipeCommentOutOutput> | null;
};

export type RecipeAsset = {
    name: string;
    icon: string;
    fileName?: string | null;
};

export type RecipeCategory = {
    id?: string | null;
    name: string;
    slug: string;
};

export type RecipeCategoryPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeCategory>;
    next?: string | null;
    previous?: string | null;
};

export type RecipeCommentCreate = {
    recipeId: string;
    text: string;
};

export type RecipeCommentOutInput = {
    recipeId: string;
    text: string;
    id: string;
    createdAt: string;
    update_at: string;
    userId: string;
    user: MealieSchemaRecipeRecipeCommentsUserBase;
};

export type RecipeCommentOutOutput = {
    recipeId: string;
    text: string;
    id: string;
    createdAt: string;
    updatedAt: string;
    userId: string;
    user: UserBaseOutput;
};

export type RecipeCommentPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeCommentOutOutput>;
    next?: string | null;
    previous?: string | null;
};

export type RecipeCommentUpdate = {
    id: string;
    text: string;
};

export type RecipeCookBook = {
    name: string;
    description?: string;
    slug?: string | null;
    position?: number;
    public?: boolean;
    queryFilterString?: string;
    groupId: string;
    householdId: string;
    id: string;
    queryFilter?: QueryFilterJson;
    recipes: Array<RecipeSummary>;
};

export type RecipeDuplicate = {
    name?: string | null;
};

export type RecipeIngredientInput = {
    quantity?: number | null;
    unit?: IngredientUnitInput | CreateIngredientUnit | null;
    food?: IngredientFoodInput | CreateIngredientFood | null;
    note?: string | null;
    isFood?: boolean | null;
    disableAmount?: boolean;
    display?: string;
    title?: string | null;
    originalText?: string | null;
    referenceId?: string;
};

export type RecipeIngredientOutput = {
    quantity?: number | null;
    unit?: IngredientUnitOutput | CreateIngredientUnit | null;
    food?: IngredientFoodOutput | CreateIngredientFood | null;
    note?: string | null;
    isFood?: boolean | null;
    disableAmount?: boolean;
    display?: string;
    title?: string | null;
    originalText?: string | null;
    referenceId?: string;
};

export type RecipeLastMade = {
    timestamp: string;
};

export type RecipeNote = {
    title: string;
    text: string;
};

export type RecipeSettings = {
    public?: boolean;
    showNutrition?: boolean;
    showAssets?: boolean;
    landscapeView?: boolean;
    disableComments?: boolean;
    disableAmount?: boolean;
    locked?: boolean;
};

export type RecipeShareToken = {
    recipeId: string;
    expiresAt?: string;
    groupId: string;
    id: string;
    createdAt: string;
    recipe: RecipeOutput;
};

export type RecipeShareTokenCreate = {
    recipeId: string;
    expiresAt?: string;
};

export type RecipeShareTokenSummary = {
    recipeId: string;
    expiresAt?: string;
    groupId: string;
    id: string;
    createdAt: string;
};

export type RecipeStep = {
    id?: string | null;
    title?: string | null;
    summary?: string | null;
    text: string;
    ingredientReferences?: Array<IngredientReferences>;
};

export type RecipeSuggestionResponse = {
    items: Array<RecipeSuggestionResponseItem>;
};

export type RecipeSuggestionResponseItem = {
    recipe: RecipeSummary;
    missingFoods: Array<IngredientFoodOutput>;
    missingTools: Array<RecipeTool>;
};

export type RecipeSummary = {
    id?: string | null;
    userId?: string;
    householdId?: string;
    groupId?: string;
    name?: string | null;
    slug?: string;
    image?: unknown | null;
    recipeServings?: number;
    recipeYieldQuantity?: number;
    recipeYield?: string | null;
    totalTime?: string | null;
    prepTime?: string | null;
    cookTime?: string | null;
    performTime?: string | null;
    description?: string | null;
    recipeCategory?: Array<RecipeCategory> | null;
    tags?: Array<RecipeTag> | null;
    tools?: Array<RecipeTool>;
    rating?: number | null;
    orgURL?: string | null;
    dateAdded?: string | null;
    dateUpdated?: string | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    lastMade?: string | null;
};

export type RecipeTag = {
    id?: string | null;
    name: string;
    slug: string;
};

export type RecipeTagPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeTag>;
    next?: string | null;
    previous?: string | null;
};

export type RecipeTagResponse = {
    name: string;
    id: string;
    slug: string;
    recipes?: Array<RecipeSummary>;
};

export type RecipeTimelineEventIn = {
    recipeId: string;
    userId?: string | null;
    subject: string;
    eventType: TimelineEventType;
    eventMessage?: string | null;
    image?: TimelineEventImage | null;
    timestamp?: string;
};

export type RecipeTimelineEventOut = {
    recipeId: string;
    userId: string;
    subject: string;
    eventType: TimelineEventType;
    eventMessage?: string | null;
    image?: TimelineEventImage | null;
    timestamp?: string;
    id: string;
    groupId: string;
    householdId: string;
    createdAt: string;
    updatedAt: string;
};

export type RecipeTimelineEventPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeTimelineEventOut>;
    next?: string | null;
    previous?: string | null;
};

export type RecipeTimelineEventUpdate = {
    subject: string;
    eventMessage?: string | null;
    image?: TimelineEventImage | null;
};

export type RecipeTool = {
    id: string;
    name: string;
    slug: string;
    householdsWithTool?: Array<string>;
};

export type RecipeToolCreate = {
    name: string;
    householdsWithTool?: Array<string>;
};

export type RecipeToolOut = {
    name: string;
    householdsWithTool?: Array<string>;
    id: string;
    slug: string;
};

export type RecipeToolPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<RecipeTool>;
    next?: string | null;
    previous?: string | null;
};

export type RecipeToolResponse = {
    name: string;
    householdsWithTool?: Array<string>;
    id: string;
    slug: string;
    recipes?: Array<RecipeSummary>;
};

export type RecipeZipTokenResponse = {
    token: string;
};

export type RegisteredParser = 'nlp' | 'brute' | 'openai';

export type RelationalKeyword = 'IS' | 'IS NOT' | 'IN' | 'NOT IN' | 'CONTAINS ALL' | 'LIKE' | 'NOT LIKE';

export type RelationalOperator = '=' | '<>' | '>' | '<' | '>=' | '<=';

export type ReportCategory = 'backup' | 'restore' | 'migration' | 'bulk_import';

export type ReportEntryOut = {
    reportId: string;
    timestamp?: string;
    success?: boolean;
    message: string;
    exception?: string;
    id: string;
};

export type ReportOut = {
    timestamp?: string;
    category: ReportCategory;
    groupId: string;
    name: string;
    status?: ReportSummaryStatus;
    id: string;
    entries?: Array<ReportEntryOut>;
};

export type ReportSummary = {
    timestamp?: string;
    category: ReportCategory;
    groupId: string;
    name: string;
    status?: ReportSummaryStatus;
    id: string;
};

export type ReportSummaryStatus = 'in-progress' | 'success' | 'failure' | 'partial';

export type ResetPassword = {
    token: string;
    email: string;
    password: string;
    passwordConfirm: string;
};

export type SaveGroupRecipeAction = {
    actionType: GroupRecipeActionType;
    title: string;
    url: string;
    groupId: string;
    householdId: string;
};

export type ScrapeRecipe = {
    includeTags?: boolean;
    url: string;
};

export type ScrapeRecipeData = {
    includeTags?: boolean;
    data: string;
};

export type ScrapeRecipeTest = {
    url: string;
    useOpenAI?: boolean;
};

export type SeederConfig = {
    locale: string;
};

export type SetPermissions = {
    userId: string;
    canManageHousehold?: boolean;
    canManage?: boolean;
    canInvite?: boolean;
    canOrganize?: boolean;
};

export type ShoppingListAddRecipeParams = {
    recipeIncrementQuantity?: number;
    recipeIngredients?: Array<RecipeIngredientInput> | null;
};

export type ShoppingListAddRecipeParamsBulk = {
    recipeIncrementQuantity?: number;
    recipeIngredients?: Array<RecipeIngredientInput> | null;
    recipeId: string;
};

export type ShoppingListCreate = {
    name?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    createdAt?: string | null;
    update_at?: string | null;
};

export type ShoppingListItemCreate = {
    quantity?: number;
    unit?: IngredientUnitInput | CreateIngredientUnit | null;
    food?: IngredientFoodInput | CreateIngredientFood | null;
    note?: string | null;
    isFood?: boolean;
    disableAmount?: boolean | null;
    display?: string;
    shoppingListId: string;
    checked?: boolean;
    position?: number;
    foodId?: string | null;
    labelId?: string | null;
    unitId?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    id?: string | null;
    recipeReferences?: Array<ShoppingListItemRecipeRefCreate>;
};

export type ShoppingListItemOutInput = {
    quantity?: number;
    unit?: IngredientUnitInput | null;
    food?: IngredientFoodInput | null;
    note?: string | null;
    isFood?: boolean;
    disableAmount?: boolean | null;
    display?: string;
    shoppingListId: string;
    checked?: boolean;
    position?: number;
    foodId?: string | null;
    labelId?: string | null;
    unitId?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    id: string;
    groupId: string;
    householdId: string;
    label?: MultiPurposeLabelSummary | null;
    recipeReferences?: Array<ShoppingListItemRecipeRefOut>;
    createdAt?: string | null;
    update_at?: string | null;
};

export type ShoppingListItemOutOutput = {
    quantity?: number;
    unit?: IngredientUnitOutput | null;
    food?: IngredientFoodOutput | null;
    note?: string | null;
    isFood?: boolean;
    disableAmount?: boolean | null;
    display?: string;
    shoppingListId: string;
    checked?: boolean;
    position?: number;
    foodId?: string | null;
    labelId?: string | null;
    unitId?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    id: string;
    groupId: string;
    householdId: string;
    label?: MultiPurposeLabelSummary | null;
    recipeReferences?: Array<ShoppingListItemRecipeRefOut>;
    createdAt?: string | null;
    updatedAt?: string | null;
};

export type ShoppingListItemPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<ShoppingListItemOutOutput>;
    next?: string | null;
    previous?: string | null;
};

export type ShoppingListItemRecipeRefCreate = {
    recipeId: string;
    recipeQuantity?: number;
    recipeScale?: number | null;
    recipeNote?: string | null;
};

export type ShoppingListItemRecipeRefOut = {
    recipeId: string;
    recipeQuantity?: number;
    recipeScale?: number | null;
    recipeNote?: string | null;
    id: string;
    shoppingListItemId: string;
};

export type ShoppingListItemRecipeRefUpdate = {
    recipeId: string;
    recipeQuantity?: number;
    recipeScale?: number | null;
    recipeNote?: string | null;
    id: string;
    shoppingListItemId: string;
};

export type ShoppingListItemUpdate = {
    quantity?: number;
    unit?: IngredientUnitInput | CreateIngredientUnit | null;
    food?: IngredientFoodInput | CreateIngredientFood | null;
    note?: string | null;
    isFood?: boolean;
    disableAmount?: boolean | null;
    display?: string;
    shoppingListId: string;
    checked?: boolean;
    position?: number;
    foodId?: string | null;
    labelId?: string | null;
    unitId?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    recipeReferences?: Array<ShoppingListItemRecipeRefCreate | ShoppingListItemRecipeRefUpdate>;
};

/**
 * Only used for bulk update operations where the shopping list item id isn't already supplied
 */
export type ShoppingListItemUpdateBulk = {
    quantity?: number;
    unit?: IngredientUnitInput | CreateIngredientUnit | null;
    food?: IngredientFoodInput | CreateIngredientFood | null;
    note?: string | null;
    isFood?: boolean;
    disableAmount?: boolean | null;
    display?: string;
    shoppingListId: string;
    checked?: boolean;
    position?: number;
    foodId?: string | null;
    labelId?: string | null;
    unitId?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    recipeReferences?: Array<ShoppingListItemRecipeRefCreate | ShoppingListItemRecipeRefUpdate>;
    id: string;
};

/**
 * Container for bulk shopping list item changes
 */
export type ShoppingListItemsCollectionOut = {
    createdItems?: Array<ShoppingListItemOutOutput>;
    updatedItems?: Array<ShoppingListItemOutOutput>;
    deletedItems?: Array<ShoppingListItemOutOutput>;
};

export type ShoppingListMultiPurposeLabelOut = {
    shoppingListId: string;
    labelId: string;
    position?: number;
    id: string;
    label: MultiPurposeLabelSummary;
};

export type ShoppingListMultiPurposeLabelUpdate = {
    shoppingListId: string;
    labelId: string;
    position?: number;
    id: string;
};

export type ShoppingListOut = {
    name?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    groupId: string;
    userId: string;
    id: string;
    listItems?: Array<ShoppingListItemOutOutput>;
    householdId: string;
    recipeReferences?: Array<ShoppingListRecipeRefOut>;
    labelSettings?: Array<ShoppingListMultiPurposeLabelOut>;
};

export type ShoppingListPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<ShoppingListSummary>;
    next?: string | null;
    previous?: string | null;
};

export type ShoppingListRecipeRefOut = {
    id: string;
    shoppingListId: string;
    recipeId: string;
    recipeQuantity: number;
    recipe: RecipeSummary;
};

export type ShoppingListRemoveRecipeParams = {
    recipeDecrementQuantity?: number;
};

export type ShoppingListSummary = {
    name?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    createdAt?: string | null;
    updatedAt?: string | null;
    groupId: string;
    userId: string;
    id: string;
    householdId: string;
    recipeReferences: Array<ShoppingListRecipeRefOut>;
    labelSettings: Array<ShoppingListMultiPurposeLabelOut>;
};

export type ShoppingListUpdate = {
    name?: string | null;
    extras?: {
        [key: string]: unknown;
    } | null;
    createdAt?: string | null;
    update_at?: string | null;
    groupId: string;
    userId: string;
    id: string;
    listItems?: Array<ShoppingListItemOutInput>;
};

export type SuccessResponse = {
    message: string;
    error?: boolean;
};

export type SupportedMigrations = 'nextcloud' | 'chowdown' | 'copymethat' | 'paprika' | 'mealie_alpha' | 'tandoor' | 'plantoeat' | 'myrecipebox' | 'recipekeeper';

export type TagBase = {
    name: string;
    id: string;
    slug: string;
};

export type TagIn = {
    name: string;
};

export type TagOut = {
    name: string;
    groupId: string;
    id: string;
    slug: string;
};

export type TimelineEventImage = 'has image' | 'does not have image';

export type TimelineEventType = 'system' | 'info' | 'comment';

export type UnlockResults = {
    unlocked?: number;
};

export type UpdateCookBook = {
    name: string;
    description?: string;
    slug?: string | null;
    position?: number;
    public?: boolean;
    queryFilterString?: string;
    groupId: string;
    householdId: string;
    id: string;
};

export type UpdateGroupPreferences = {
    privateGroup?: boolean;
};

export type UpdateHouseholdAdmin = {
    groupId: string;
    name: string;
    id: string;
    preferences?: UpdateHouseholdPreferences | null;
};

export type UpdateHouseholdPreferences = {
    privateHousehold?: boolean;
    lockRecipeEditsFromOtherHouseholds?: boolean;
    firstDayOfWeek?: number;
    recipePublic?: boolean;
    recipeShowNutrition?: boolean;
    recipeShowAssets?: boolean;
    recipeLandscapeView?: boolean;
    recipeDisableComments?: boolean;
    recipeDisableAmount?: boolean;
};

export type UpdateImageResponse = {
    image: string;
};

export type UpdatePlanEntry = {
    date: string;
    entryType?: PlanEntryType;
    title?: string;
    text?: string;
    recipeId?: string | null;
    id: number;
    groupId: string;
    userId: string;
};

export type UserBaseOutput = {
    id: string;
    username?: string | null;
    admin: boolean;
    fullName?: string | null;
};

export type UserIn = {
    id?: string | null;
    username: string;
    fullName: string;
    email: string;
    authMethod?: AuthMethod;
    admin?: boolean;
    group?: string | null;
    household?: string | null;
    advanced?: boolean;
    canInvite?: boolean;
    canManage?: boolean;
    canManageHousehold?: boolean;
    canOrganize?: boolean;
    password: string;
};

export type UserOut = {
    id: string;
    username?: string | null;
    fullName?: string | null;
    email: string;
    authMethod?: AuthMethod;
    admin?: boolean;
    group: string;
    household: string;
    advanced?: boolean;
    canInvite?: boolean;
    canManage?: boolean;
    canManageHousehold?: boolean;
    canOrganize?: boolean;
    groupId: string;
    groupSlug: string;
    householdId: string;
    householdSlug: string;
    tokens?: Array<LongLiveTokenOut> | null;
    cacheKey: string;
};

export type UserPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<UserOut>;
    next?: string | null;
    previous?: string | null;
};

export type UserRatingOut = {
    recipeId: string;
    rating?: number | null;
    isFavorite?: boolean;
    userId: string;
    id: string;
};

export type UserRatingSummary = {
    recipeId: string;
    rating?: number | null;
    isFavorite?: boolean;
};

export type UserRatingUpdate = {
    rating?: number | null;
    isFavorite?: boolean | null;
};

export type UserRatingsUserRatingOut = {
    ratings: Array<UserRatingOut>;
};

export type UserRatingsUserRatingSummary = {
    ratings: Array<UserRatingSummary>;
};

export type UserSummary = {
    id: string;
    groupId: string;
    householdId: string;
    username: string;
    fullName: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type WebhookPagination = {
    page?: number;
    per_page?: number;
    total?: number;
    total_pages?: number;
    items: Array<ReadWebhook>;
    next?: string | null;
    previous?: string | null;
};

export type WebhookType = 'mealplan';

export type MealieSchemaRecipeRecipeCommentsUserBase = {
    id: string;
    username?: string | null;
    admin: boolean;
    fullName?: string | null;
};

export type MealieSchemaUserUserUserBase = {
    id?: string | null;
    username?: string | null;
    fullName?: string | null;
    email: string;
    authMethod?: AuthMethod;
    admin?: boolean;
    group?: string | null;
    household?: string | null;
    advanced?: boolean;
    canInvite?: boolean;
    canManage?: boolean;
    canManageHousehold?: boolean;
    canOrganize?: boolean;
};

export type GetAppInfoApiAppAboutGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/app/about';
};

export type GetAppInfoApiAppAboutGetResponses = {
    /**
     * Successful Response
     */
    200: AppInfo;
};

export type GetAppInfoApiAppAboutGetResponse = GetAppInfoApiAppAboutGetResponses[keyof GetAppInfoApiAppAboutGetResponses];

export type GetStartupInfoApiAppAboutStartupInfoGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/app/about/startup-info';
};

export type GetStartupInfoApiAppAboutStartupInfoGetResponses = {
    /**
     * Successful Response
     */
    200: AppStartupInfo;
};

export type GetStartupInfoApiAppAboutStartupInfoGetResponse = GetStartupInfoApiAppAboutStartupInfoGetResponses[keyof GetStartupInfoApiAppAboutStartupInfoGetResponses];

export type GetAppThemeApiAppAboutThemeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/app/about/theme';
};

export type GetAppThemeApiAppAboutThemeGetResponses = {
    /**
     * Successful Response
     */
    200: AppTheme;
};

export type GetAppThemeApiAppAboutThemeGetResponse = GetAppThemeApiAppAboutThemeGetResponses[keyof GetAppThemeApiAppAboutThemeGetResponses];

export type GetTokenApiAuthTokenPostData = {
    body?: BodyGetTokenApiAuthTokenPost;
    path?: never;
    query?: never;
    url: '/api/auth/token';
};

export type GetTokenApiAuthTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTokenApiAuthTokenPostError = GetTokenApiAuthTokenPostErrors[keyof GetTokenApiAuthTokenPostErrors];

export type GetTokenApiAuthTokenPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type OauthLoginApiAuthOauthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/oauth';
};

export type OauthLoginApiAuthOauthGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type OauthCallbackApiAuthOauthCallbackGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/oauth/callback';
};

export type OauthCallbackApiAuthOauthCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RefreshTokenApiAuthRefreshGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/refresh';
};

export type RefreshTokenApiAuthRefreshGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type LogoutApiAuthLogoutPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/logout';
};

export type LogoutApiAuthLogoutPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RegisterNewUserApiUsersRegisterPostData = {
    body: CreateUserRegistration;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/users/register';
};

export type RegisterNewUserApiUsersRegisterPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterNewUserApiUsersRegisterPostError = RegisterNewUserApiUsersRegisterPostErrors[keyof RegisterNewUserApiUsersRegisterPostErrors];

export type RegisterNewUserApiUsersRegisterPostResponses = {
    /**
     * Successful Response
     */
    201: UserOut;
};

export type RegisterNewUserApiUsersRegisterPostResponse = RegisterNewUserApiUsersRegisterPostResponses[keyof RegisterNewUserApiUsersRegisterPostResponses];

export type GetLoggedInUserApiUsersSelfGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/users/self';
};

export type GetLoggedInUserApiUsersSelfGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLoggedInUserApiUsersSelfGetError = GetLoggedInUserApiUsersSelfGetErrors[keyof GetLoggedInUserApiUsersSelfGetErrors];

export type GetLoggedInUserApiUsersSelfGetResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type GetLoggedInUserApiUsersSelfGetResponse = GetLoggedInUserApiUsersSelfGetResponses[keyof GetLoggedInUserApiUsersSelfGetResponses];

export type GetLoggedInUserRatingsApiUsersSelfRatingsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/users/self/ratings';
};

export type GetLoggedInUserRatingsApiUsersSelfRatingsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLoggedInUserRatingsApiUsersSelfRatingsGetError = GetLoggedInUserRatingsApiUsersSelfRatingsGetErrors[keyof GetLoggedInUserRatingsApiUsersSelfRatingsGetErrors];

export type GetLoggedInUserRatingsApiUsersSelfRatingsGetResponses = {
    /**
     * Successful Response
     */
    200: UserRatingsUserRatingSummary;
};

export type GetLoggedInUserRatingsApiUsersSelfRatingsGetResponse = GetLoggedInUserRatingsApiUsersSelfRatingsGetResponses[keyof GetLoggedInUserRatingsApiUsersSelfRatingsGetResponses];

export type GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        recipe_id: string;
    };
    query?: never;
    url: '/api/users/self/ratings/{recipe_id}';
};

export type GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetError = GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetErrors[keyof GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetErrors];

export type GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserRatingSummary;
};

export type GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetResponse = GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetResponses[keyof GetLoggedInUserRatingForRecipeApiUsersSelfRatingsRecipeIdGetResponses];

export type GetLoggedInUserFavoritesApiUsersSelfFavoritesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/users/self/favorites';
};

export type GetLoggedInUserFavoritesApiUsersSelfFavoritesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLoggedInUserFavoritesApiUsersSelfFavoritesGetError = GetLoggedInUserFavoritesApiUsersSelfFavoritesGetErrors[keyof GetLoggedInUserFavoritesApiUsersSelfFavoritesGetErrors];

export type GetLoggedInUserFavoritesApiUsersSelfFavoritesGetResponses = {
    /**
     * Successful Response
     */
    200: UserRatingsUserRatingSummary;
};

export type GetLoggedInUserFavoritesApiUsersSelfFavoritesGetResponse = GetLoggedInUserFavoritesApiUsersSelfFavoritesGetResponses[keyof GetLoggedInUserFavoritesApiUsersSelfFavoritesGetResponses];

export type UpdatePasswordApiUsersPasswordPutData = {
    body: ChangePassword;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/users/password';
};

export type UpdatePasswordApiUsersPasswordPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdatePasswordApiUsersPasswordPutError = UpdatePasswordApiUsersPasswordPutErrors[keyof UpdatePasswordApiUsersPasswordPutErrors];

export type UpdatePasswordApiUsersPasswordPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DeleteUserApiUsersItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/users/{item_id}';
};

export type DeleteUserApiUsersItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserApiUsersItemIdDeleteError = DeleteUserApiUsersItemIdDeleteErrors[keyof DeleteUserApiUsersItemIdDeleteErrors];

export type DeleteUserApiUsersItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserApiUsersItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/users/{item_id}';
};

export type GetUserApiUsersItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserApiUsersItemIdGetError = GetUserApiUsersItemIdGetErrors[keyof GetUserApiUsersItemIdGetErrors];

export type GetUserApiUsersItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type GetUserApiUsersItemIdGetResponse = GetUserApiUsersItemIdGetResponses[keyof GetUserApiUsersItemIdGetResponses];

export type UpdateUserApiUsersItemIdPutData = {
    body: MealieSchemaUserUserUserBase;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/users/{item_id}';
};

export type UpdateUserApiUsersItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserApiUsersItemIdPutError = UpdateUserApiUsersItemIdPutErrors[keyof UpdateUserApiUsersItemIdPutErrors];

export type UpdateUserApiUsersItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAllApiUsersGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/users';
};

export type GetAllApiUsersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiUsersGetError = GetAllApiUsersGetErrors[keyof GetAllApiUsersGetErrors];

export type GetAllApiUsersGetResponses = {
    /**
     * Successful Response
     */
    200: UserPagination;
};

export type GetAllApiUsersGetResponse = GetAllApiUsersGetResponses[keyof GetAllApiUsersGetResponses];

export type CreateUserApiUsersPostData = {
    body: UserIn;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/users';
};

export type CreateUserApiUsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateUserApiUsersPostError = CreateUserApiUsersPostErrors[keyof CreateUserApiUsersPostErrors];

export type CreateUserApiUsersPostResponses = {
    /**
     * Successful Response
     */
    201: UserOut;
};

export type CreateUserApiUsersPostResponse = CreateUserApiUsersPostResponses[keyof CreateUserApiUsersPostResponses];

export type ForgotPasswordApiUsersForgotPasswordPostData = {
    body: ForgotPassword;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/users/forgot-password';
};

export type ForgotPasswordApiUsersForgotPasswordPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ForgotPasswordApiUsersForgotPasswordPostError = ForgotPasswordApiUsersForgotPasswordPostErrors[keyof ForgotPasswordApiUsersForgotPasswordPostErrors];

export type ForgotPasswordApiUsersForgotPasswordPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ResetPasswordApiUsersResetPasswordPostData = {
    body: ResetPassword;
    path?: never;
    query?: never;
    url: '/api/users/reset-password';
};

export type ResetPasswordApiUsersResetPasswordPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetPasswordApiUsersResetPasswordPostError = ResetPasswordApiUsersResetPasswordPostErrors[keyof ResetPasswordApiUsersResetPasswordPostErrors];

export type ResetPasswordApiUsersResetPasswordPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateUserImageApiUsersIdImagePostData = {
    body: BodyUpdateUserImageApiUsersIdImagePost;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/api/users/{id}/image';
};

export type UpdateUserImageApiUsersIdImagePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserImageApiUsersIdImagePostError = UpdateUserImageApiUsersIdImagePostErrors[keyof UpdateUserImageApiUsersIdImagePostErrors];

export type UpdateUserImageApiUsersIdImagePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateApiTokenApiUsersApiTokensPostData = {
    body: LongLiveTokenIn;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/users/api-tokens';
};

export type CreateApiTokenApiUsersApiTokensPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateApiTokenApiUsersApiTokensPostError = CreateApiTokenApiUsersApiTokensPostErrors[keyof CreateApiTokenApiUsersApiTokensPostErrors];

export type CreateApiTokenApiUsersApiTokensPostResponses = {
    /**
     * Successful Response
     */
    201: LongLiveTokenCreateResponse;
};

export type CreateApiTokenApiUsersApiTokensPostResponse = CreateApiTokenApiUsersApiTokensPostResponses[keyof CreateApiTokenApiUsersApiTokensPostResponses];

export type DeleteApiTokenApiUsersApiTokensTokenIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        token_id: number;
    };
    query?: never;
    url: '/api/users/api-tokens/{token_id}';
};

export type DeleteApiTokenApiUsersApiTokensTokenIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteApiTokenApiUsersApiTokensTokenIdDeleteError = DeleteApiTokenApiUsersApiTokensTokenIdDeleteErrors[keyof DeleteApiTokenApiUsersApiTokensTokenIdDeleteErrors];

export type DeleteApiTokenApiUsersApiTokensTokenIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: DeleteTokenResponse;
};

export type DeleteApiTokenApiUsersApiTokensTokenIdDeleteResponse = DeleteApiTokenApiUsersApiTokensTokenIdDeleteResponses[keyof DeleteApiTokenApiUsersApiTokensTokenIdDeleteResponses];

export type GetRatingsApiUsersIdRatingsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/api/users/{id}/ratings';
};

export type GetRatingsApiUsersIdRatingsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRatingsApiUsersIdRatingsGetError = GetRatingsApiUsersIdRatingsGetErrors[keyof GetRatingsApiUsersIdRatingsGetErrors];

export type GetRatingsApiUsersIdRatingsGetResponses = {
    /**
     * Successful Response
     */
    200: UserRatingsUserRatingOut;
};

export type GetRatingsApiUsersIdRatingsGetResponse = GetRatingsApiUsersIdRatingsGetResponses[keyof GetRatingsApiUsersIdRatingsGetResponses];

export type GetFavoritesApiUsersIdFavoritesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        id: string;
    };
    query?: never;
    url: '/api/users/{id}/favorites';
};

export type GetFavoritesApiUsersIdFavoritesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFavoritesApiUsersIdFavoritesGetError = GetFavoritesApiUsersIdFavoritesGetErrors[keyof GetFavoritesApiUsersIdFavoritesGetErrors];

export type GetFavoritesApiUsersIdFavoritesGetResponses = {
    /**
     * Successful Response
     */
    200: UserRatingsUserRatingOut;
};

export type GetFavoritesApiUsersIdFavoritesGetResponse = GetFavoritesApiUsersIdFavoritesGetResponses[keyof GetFavoritesApiUsersIdFavoritesGetResponses];

export type SetRatingApiUsersIdRatingsSlugPostData = {
    body: UserRatingUpdate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        id: string;
        slug: string;
    };
    query?: never;
    url: '/api/users/{id}/ratings/{slug}';
};

export type SetRatingApiUsersIdRatingsSlugPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SetRatingApiUsersIdRatingsSlugPostError = SetRatingApiUsersIdRatingsSlugPostErrors[keyof SetRatingApiUsersIdRatingsSlugPostErrors];

export type SetRatingApiUsersIdRatingsSlugPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type RemoveFavoriteApiUsersIdFavoritesSlugDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        id: string;
        slug: string;
    };
    query?: never;
    url: '/api/users/{id}/favorites/{slug}';
};

export type RemoveFavoriteApiUsersIdFavoritesSlugDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RemoveFavoriteApiUsersIdFavoritesSlugDeleteError = RemoveFavoriteApiUsersIdFavoritesSlugDeleteErrors[keyof RemoveFavoriteApiUsersIdFavoritesSlugDeleteErrors];

export type RemoveFavoriteApiUsersIdFavoritesSlugDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AddFavoriteApiUsersIdFavoritesSlugPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        id: string;
        slug: string;
    };
    query?: never;
    url: '/api/users/{id}/favorites/{slug}';
};

export type AddFavoriteApiUsersIdFavoritesSlugPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddFavoriteApiUsersIdFavoritesSlugPostError = AddFavoriteApiUsersIdFavoritesSlugPostErrors[keyof AddFavoriteApiUsersIdFavoritesSlugPostErrors];

export type AddFavoriteApiUsersIdFavoritesSlugPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAllApiHouseholdsCookbooksGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/cookbooks';
};

export type GetAllApiHouseholdsCookbooksGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiHouseholdsCookbooksGetError = GetAllApiHouseholdsCookbooksGetErrors[keyof GetAllApiHouseholdsCookbooksGetErrors];

export type GetAllApiHouseholdsCookbooksGetResponses = {
    /**
     * Successful Response
     */
    200: CookBookPagination;
};

export type GetAllApiHouseholdsCookbooksGetResponse = GetAllApiHouseholdsCookbooksGetResponses[keyof GetAllApiHouseholdsCookbooksGetResponses];

export type CreateOneApiHouseholdsCookbooksPostData = {
    body: CreateCookBook;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/cookbooks';
};

export type CreateOneApiHouseholdsCookbooksPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiHouseholdsCookbooksPostError = CreateOneApiHouseholdsCookbooksPostErrors[keyof CreateOneApiHouseholdsCookbooksPostErrors];

export type CreateOneApiHouseholdsCookbooksPostResponses = {
    /**
     * Successful Response
     */
    201: ReadCookBook;
};

export type CreateOneApiHouseholdsCookbooksPostResponse = CreateOneApiHouseholdsCookbooksPostResponses[keyof CreateOneApiHouseholdsCookbooksPostResponses];

export type UpdateManyApiHouseholdsCookbooksPutData = {
    body: Array<UpdateCookBook>;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/cookbooks';
};

export type UpdateManyApiHouseholdsCookbooksPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateManyApiHouseholdsCookbooksPutError = UpdateManyApiHouseholdsCookbooksPutErrors[keyof UpdateManyApiHouseholdsCookbooksPutErrors];

export type UpdateManyApiHouseholdsCookbooksPutResponses = {
    /**
     * Successful Response
     */
    200: Array<ReadCookBook>;
};

export type UpdateManyApiHouseholdsCookbooksPutResponse = UpdateManyApiHouseholdsCookbooksPutResponses[keyof UpdateManyApiHouseholdsCookbooksPutResponses];

export type DeleteOneApiHouseholdsCookbooksItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/cookbooks/{item_id}';
};

export type DeleteOneApiHouseholdsCookbooksItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiHouseholdsCookbooksItemIdDeleteError = DeleteOneApiHouseholdsCookbooksItemIdDeleteErrors[keyof DeleteOneApiHouseholdsCookbooksItemIdDeleteErrors];

export type DeleteOneApiHouseholdsCookbooksItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: ReadCookBook;
};

export type DeleteOneApiHouseholdsCookbooksItemIdDeleteResponse = DeleteOneApiHouseholdsCookbooksItemIdDeleteResponses[keyof DeleteOneApiHouseholdsCookbooksItemIdDeleteResponses];

export type GetOneApiHouseholdsCookbooksItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/cookbooks/{item_id}';
};

export type GetOneApiHouseholdsCookbooksItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiHouseholdsCookbooksItemIdGetError = GetOneApiHouseholdsCookbooksItemIdGetErrors[keyof GetOneApiHouseholdsCookbooksItemIdGetErrors];

export type GetOneApiHouseholdsCookbooksItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeCookBook;
};

export type GetOneApiHouseholdsCookbooksItemIdGetResponse = GetOneApiHouseholdsCookbooksItemIdGetResponses[keyof GetOneApiHouseholdsCookbooksItemIdGetResponses];

export type UpdateOneApiHouseholdsCookbooksItemIdPutData = {
    body: CreateCookBook;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/cookbooks/{item_id}';
};

export type UpdateOneApiHouseholdsCookbooksItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiHouseholdsCookbooksItemIdPutError = UpdateOneApiHouseholdsCookbooksItemIdPutErrors[keyof UpdateOneApiHouseholdsCookbooksItemIdPutErrors];

export type UpdateOneApiHouseholdsCookbooksItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: ReadCookBook;
};

export type UpdateOneApiHouseholdsCookbooksItemIdPutResponse = UpdateOneApiHouseholdsCookbooksItemIdPutResponses[keyof UpdateOneApiHouseholdsCookbooksItemIdPutResponses];

export type GetAllApiHouseholdsEventsNotificationsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/events/notifications';
};

export type GetAllApiHouseholdsEventsNotificationsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiHouseholdsEventsNotificationsGetError = GetAllApiHouseholdsEventsNotificationsGetErrors[keyof GetAllApiHouseholdsEventsNotificationsGetErrors];

export type GetAllApiHouseholdsEventsNotificationsGetResponses = {
    /**
     * Successful Response
     */
    200: GroupEventPagination;
};

export type GetAllApiHouseholdsEventsNotificationsGetResponse = GetAllApiHouseholdsEventsNotificationsGetResponses[keyof GetAllApiHouseholdsEventsNotificationsGetResponses];

export type CreateOneApiHouseholdsEventsNotificationsPostData = {
    body: GroupEventNotifierCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/events/notifications';
};

export type CreateOneApiHouseholdsEventsNotificationsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiHouseholdsEventsNotificationsPostError = CreateOneApiHouseholdsEventsNotificationsPostErrors[keyof CreateOneApiHouseholdsEventsNotificationsPostErrors];

export type CreateOneApiHouseholdsEventsNotificationsPostResponses = {
    /**
     * Successful Response
     */
    201: GroupEventNotifierOut;
};

export type CreateOneApiHouseholdsEventsNotificationsPostResponse = CreateOneApiHouseholdsEventsNotificationsPostResponses[keyof CreateOneApiHouseholdsEventsNotificationsPostResponses];

export type DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/events/notifications/{item_id}';
};

export type DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteError = DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteErrors[keyof DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteErrors];

export type DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteResponse = DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteResponses[keyof DeleteOneApiHouseholdsEventsNotificationsItemIdDeleteResponses];

export type GetOneApiHouseholdsEventsNotificationsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/events/notifications/{item_id}';
};

export type GetOneApiHouseholdsEventsNotificationsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiHouseholdsEventsNotificationsItemIdGetError = GetOneApiHouseholdsEventsNotificationsItemIdGetErrors[keyof GetOneApiHouseholdsEventsNotificationsItemIdGetErrors];

export type GetOneApiHouseholdsEventsNotificationsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: GroupEventNotifierOut;
};

export type GetOneApiHouseholdsEventsNotificationsItemIdGetResponse = GetOneApiHouseholdsEventsNotificationsItemIdGetResponses[keyof GetOneApiHouseholdsEventsNotificationsItemIdGetResponses];

export type UpdateOneApiHouseholdsEventsNotificationsItemIdPutData = {
    body: GroupEventNotifierUpdate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/events/notifications/{item_id}';
};

export type UpdateOneApiHouseholdsEventsNotificationsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiHouseholdsEventsNotificationsItemIdPutError = UpdateOneApiHouseholdsEventsNotificationsItemIdPutErrors[keyof UpdateOneApiHouseholdsEventsNotificationsItemIdPutErrors];

export type UpdateOneApiHouseholdsEventsNotificationsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: GroupEventNotifierOut;
};

export type UpdateOneApiHouseholdsEventsNotificationsItemIdPutResponse = UpdateOneApiHouseholdsEventsNotificationsItemIdPutResponses[keyof UpdateOneApiHouseholdsEventsNotificationsItemIdPutResponses];

export type TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/events/notifications/{item_id}/test';
};

export type TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostError = TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostErrors[keyof TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostErrors];

export type TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostResponses = {
    /**
     * Successful Response
     */
    204: void;
};

export type TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostResponse = TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostResponses[keyof TestNotificationApiHouseholdsEventsNotificationsItemIdTestPostResponses];

export type GetAllApiHouseholdsRecipeActionsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/recipe-actions';
};

export type GetAllApiHouseholdsRecipeActionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiHouseholdsRecipeActionsGetError = GetAllApiHouseholdsRecipeActionsGetErrors[keyof GetAllApiHouseholdsRecipeActionsGetErrors];

export type GetAllApiHouseholdsRecipeActionsGetResponses = {
    /**
     * Successful Response
     */
    200: GroupRecipeActionPagination;
};

export type GetAllApiHouseholdsRecipeActionsGetResponse = GetAllApiHouseholdsRecipeActionsGetResponses[keyof GetAllApiHouseholdsRecipeActionsGetResponses];

export type CreateOneApiHouseholdsRecipeActionsPostData = {
    body: CreateGroupRecipeAction;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/recipe-actions';
};

export type CreateOneApiHouseholdsRecipeActionsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiHouseholdsRecipeActionsPostError = CreateOneApiHouseholdsRecipeActionsPostErrors[keyof CreateOneApiHouseholdsRecipeActionsPostErrors];

export type CreateOneApiHouseholdsRecipeActionsPostResponses = {
    /**
     * Successful Response
     */
    201: GroupRecipeActionOut;
};

export type CreateOneApiHouseholdsRecipeActionsPostResponse = CreateOneApiHouseholdsRecipeActionsPostResponses[keyof CreateOneApiHouseholdsRecipeActionsPostResponses];

export type DeleteOneApiHouseholdsRecipeActionsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/recipe-actions/{item_id}';
};

export type DeleteOneApiHouseholdsRecipeActionsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiHouseholdsRecipeActionsItemIdDeleteError = DeleteOneApiHouseholdsRecipeActionsItemIdDeleteErrors[keyof DeleteOneApiHouseholdsRecipeActionsItemIdDeleteErrors];

export type DeleteOneApiHouseholdsRecipeActionsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: GroupRecipeActionOut;
};

export type DeleteOneApiHouseholdsRecipeActionsItemIdDeleteResponse = DeleteOneApiHouseholdsRecipeActionsItemIdDeleteResponses[keyof DeleteOneApiHouseholdsRecipeActionsItemIdDeleteResponses];

export type GetOneApiHouseholdsRecipeActionsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/recipe-actions/{item_id}';
};

export type GetOneApiHouseholdsRecipeActionsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiHouseholdsRecipeActionsItemIdGetError = GetOneApiHouseholdsRecipeActionsItemIdGetErrors[keyof GetOneApiHouseholdsRecipeActionsItemIdGetErrors];

export type GetOneApiHouseholdsRecipeActionsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: GroupRecipeActionOut;
};

export type GetOneApiHouseholdsRecipeActionsItemIdGetResponse = GetOneApiHouseholdsRecipeActionsItemIdGetResponses[keyof GetOneApiHouseholdsRecipeActionsItemIdGetResponses];

export type UpdateOneApiHouseholdsRecipeActionsItemIdPutData = {
    body: SaveGroupRecipeAction;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/recipe-actions/{item_id}';
};

export type UpdateOneApiHouseholdsRecipeActionsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiHouseholdsRecipeActionsItemIdPutError = UpdateOneApiHouseholdsRecipeActionsItemIdPutErrors[keyof UpdateOneApiHouseholdsRecipeActionsItemIdPutErrors];

export type UpdateOneApiHouseholdsRecipeActionsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: GroupRecipeActionOut;
};

export type UpdateOneApiHouseholdsRecipeActionsItemIdPutResponse = UpdateOneApiHouseholdsRecipeActionsItemIdPutResponses[keyof UpdateOneApiHouseholdsRecipeActionsItemIdPutResponses];

export type TriggerActionApiHouseholdsRecipeActionsItemIdTriggerRecipeSlugPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
        recipe_slug: string;
    };
    query?: never;
    url: '/api/households/recipe-actions/{item_id}/trigger/{recipe_slug}';
};

export type TriggerActionApiHouseholdsRecipeActionsItemIdTriggerRecipeSlugPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type TriggerActionApiHouseholdsRecipeActionsItemIdTriggerRecipeSlugPostError = TriggerActionApiHouseholdsRecipeActionsItemIdTriggerRecipeSlugPostErrors[keyof TriggerActionApiHouseholdsRecipeActionsItemIdTriggerRecipeSlugPostErrors];

export type TriggerActionApiHouseholdsRecipeActionsItemIdTriggerRecipeSlugPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type GetLoggedInUserHouseholdApiHouseholdsSelfGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/self';
};

export type GetLoggedInUserHouseholdApiHouseholdsSelfGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLoggedInUserHouseholdApiHouseholdsSelfGetError = GetLoggedInUserHouseholdApiHouseholdsSelfGetErrors[keyof GetLoggedInUserHouseholdApiHouseholdsSelfGetErrors];

export type GetLoggedInUserHouseholdApiHouseholdsSelfGetResponses = {
    /**
     * Successful Response
     */
    200: HouseholdInDb;
};

export type GetLoggedInUserHouseholdApiHouseholdsSelfGetResponse = GetLoggedInUserHouseholdApiHouseholdsSelfGetResponses[keyof GetLoggedInUserHouseholdApiHouseholdsSelfGetResponses];

export type GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        recipe_slug: string;
    };
    query?: never;
    url: '/api/households/self/recipes/{recipe_slug}';
};

export type GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetError = GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetErrors[keyof GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetErrors];

export type GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetResponses = {
    /**
     * Successful Response
     */
    200: HouseholdRecipeSummary;
};

export type GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetResponse = GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetResponses[keyof GetHouseholdRecipeApiHouseholdsSelfRecipesRecipeSlugGetResponses];

export type GetHouseholdMembersApiHouseholdsMembersGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/members';
};

export type GetHouseholdMembersApiHouseholdsMembersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetHouseholdMembersApiHouseholdsMembersGetError = GetHouseholdMembersApiHouseholdsMembersGetErrors[keyof GetHouseholdMembersApiHouseholdsMembersGetErrors];

export type GetHouseholdMembersApiHouseholdsMembersGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseUserOut;
};

export type GetHouseholdMembersApiHouseholdsMembersGetResponse = GetHouseholdMembersApiHouseholdsMembersGetResponses[keyof GetHouseholdMembersApiHouseholdsMembersGetResponses];

export type GetHouseholdPreferencesApiHouseholdsPreferencesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/preferences';
};

export type GetHouseholdPreferencesApiHouseholdsPreferencesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetHouseholdPreferencesApiHouseholdsPreferencesGetError = GetHouseholdPreferencesApiHouseholdsPreferencesGetErrors[keyof GetHouseholdPreferencesApiHouseholdsPreferencesGetErrors];

export type GetHouseholdPreferencesApiHouseholdsPreferencesGetResponses = {
    /**
     * Successful Response
     */
    200: ReadHouseholdPreferences;
};

export type GetHouseholdPreferencesApiHouseholdsPreferencesGetResponse = GetHouseholdPreferencesApiHouseholdsPreferencesGetResponses[keyof GetHouseholdPreferencesApiHouseholdsPreferencesGetResponses];

export type UpdateHouseholdPreferencesApiHouseholdsPreferencesPutData = {
    body: UpdateHouseholdPreferences;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/preferences';
};

export type UpdateHouseholdPreferencesApiHouseholdsPreferencesPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateHouseholdPreferencesApiHouseholdsPreferencesPutError = UpdateHouseholdPreferencesApiHouseholdsPreferencesPutErrors[keyof UpdateHouseholdPreferencesApiHouseholdsPreferencesPutErrors];

export type UpdateHouseholdPreferencesApiHouseholdsPreferencesPutResponses = {
    /**
     * Successful Response
     */
    200: ReadHouseholdPreferences;
};

export type UpdateHouseholdPreferencesApiHouseholdsPreferencesPutResponse = UpdateHouseholdPreferencesApiHouseholdsPreferencesPutResponses[keyof UpdateHouseholdPreferencesApiHouseholdsPreferencesPutResponses];

export type SetMemberPermissionsApiHouseholdsPermissionsPutData = {
    body: SetPermissions;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/permissions';
};

export type SetMemberPermissionsApiHouseholdsPermissionsPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SetMemberPermissionsApiHouseholdsPermissionsPutError = SetMemberPermissionsApiHouseholdsPermissionsPutErrors[keyof SetMemberPermissionsApiHouseholdsPermissionsPutErrors];

export type SetMemberPermissionsApiHouseholdsPermissionsPutResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type SetMemberPermissionsApiHouseholdsPermissionsPutResponse = SetMemberPermissionsApiHouseholdsPermissionsPutResponses[keyof SetMemberPermissionsApiHouseholdsPermissionsPutResponses];

export type GetStatisticsApiHouseholdsStatisticsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/statistics';
};

export type GetStatisticsApiHouseholdsStatisticsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStatisticsApiHouseholdsStatisticsGetError = GetStatisticsApiHouseholdsStatisticsGetErrors[keyof GetStatisticsApiHouseholdsStatisticsGetErrors];

export type GetStatisticsApiHouseholdsStatisticsGetResponses = {
    /**
     * Successful Response
     */
    200: HouseholdStatistics;
};

export type GetStatisticsApiHouseholdsStatisticsGetResponse = GetStatisticsApiHouseholdsStatisticsGetResponses[keyof GetStatisticsApiHouseholdsStatisticsGetResponses];

export type GetInviteTokensApiHouseholdsInvitationsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/invitations';
};

export type GetInviteTokensApiHouseholdsInvitationsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetInviteTokensApiHouseholdsInvitationsGetError = GetInviteTokensApiHouseholdsInvitationsGetErrors[keyof GetInviteTokensApiHouseholdsInvitationsGetErrors];

export type GetInviteTokensApiHouseholdsInvitationsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ReadInviteToken>;
};

export type GetInviteTokensApiHouseholdsInvitationsGetResponse = GetInviteTokensApiHouseholdsInvitationsGetResponses[keyof GetInviteTokensApiHouseholdsInvitationsGetResponses];

export type CreateInviteTokenApiHouseholdsInvitationsPostData = {
    body: CreateInviteToken;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/invitations';
};

export type CreateInviteTokenApiHouseholdsInvitationsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateInviteTokenApiHouseholdsInvitationsPostError = CreateInviteTokenApiHouseholdsInvitationsPostErrors[keyof CreateInviteTokenApiHouseholdsInvitationsPostErrors];

export type CreateInviteTokenApiHouseholdsInvitationsPostResponses = {
    /**
     * Successful Response
     */
    201: ReadInviteToken;
};

export type CreateInviteTokenApiHouseholdsInvitationsPostResponse = CreateInviteTokenApiHouseholdsInvitationsPostResponses[keyof CreateInviteTokenApiHouseholdsInvitationsPostResponses];

export type EmailInvitationApiHouseholdsInvitationsEmailPostData = {
    body: EmailInvitation;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/invitations/email';
};

export type EmailInvitationApiHouseholdsInvitationsEmailPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type EmailInvitationApiHouseholdsInvitationsEmailPostError = EmailInvitationApiHouseholdsInvitationsEmailPostErrors[keyof EmailInvitationApiHouseholdsInvitationsEmailPostErrors];

export type EmailInvitationApiHouseholdsInvitationsEmailPostResponses = {
    /**
     * Successful Response
     */
    200: EmailInitationResponse;
};

export type EmailInvitationApiHouseholdsInvitationsEmailPostResponse = EmailInvitationApiHouseholdsInvitationsEmailPostResponses[keyof EmailInvitationApiHouseholdsInvitationsEmailPostResponses];

export type GetAllApiHouseholdsShoppingListsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/shopping/lists';
};

export type GetAllApiHouseholdsShoppingListsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiHouseholdsShoppingListsGetError = GetAllApiHouseholdsShoppingListsGetErrors[keyof GetAllApiHouseholdsShoppingListsGetErrors];

export type GetAllApiHouseholdsShoppingListsGetResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListPagination;
};

export type GetAllApiHouseholdsShoppingListsGetResponse = GetAllApiHouseholdsShoppingListsGetResponses[keyof GetAllApiHouseholdsShoppingListsGetResponses];

export type CreateOneApiHouseholdsShoppingListsPostData = {
    body: ShoppingListCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/shopping/lists';
};

export type CreateOneApiHouseholdsShoppingListsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiHouseholdsShoppingListsPostError = CreateOneApiHouseholdsShoppingListsPostErrors[keyof CreateOneApiHouseholdsShoppingListsPostErrors];

export type CreateOneApiHouseholdsShoppingListsPostResponses = {
    /**
     * Successful Response
     */
    201: ShoppingListOut;
};

export type CreateOneApiHouseholdsShoppingListsPostResponse = CreateOneApiHouseholdsShoppingListsPostResponses[keyof CreateOneApiHouseholdsShoppingListsPostResponses];

export type DeleteOneApiHouseholdsShoppingListsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/shopping/lists/{item_id}';
};

export type DeleteOneApiHouseholdsShoppingListsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiHouseholdsShoppingListsItemIdDeleteError = DeleteOneApiHouseholdsShoppingListsItemIdDeleteErrors[keyof DeleteOneApiHouseholdsShoppingListsItemIdDeleteErrors];

export type DeleteOneApiHouseholdsShoppingListsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListOut;
};

export type DeleteOneApiHouseholdsShoppingListsItemIdDeleteResponse = DeleteOneApiHouseholdsShoppingListsItemIdDeleteResponses[keyof DeleteOneApiHouseholdsShoppingListsItemIdDeleteResponses];

export type GetOneApiHouseholdsShoppingListsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/shopping/lists/{item_id}';
};

export type GetOneApiHouseholdsShoppingListsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiHouseholdsShoppingListsItemIdGetError = GetOneApiHouseholdsShoppingListsItemIdGetErrors[keyof GetOneApiHouseholdsShoppingListsItemIdGetErrors];

export type GetOneApiHouseholdsShoppingListsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListOut;
};

export type GetOneApiHouseholdsShoppingListsItemIdGetResponse = GetOneApiHouseholdsShoppingListsItemIdGetResponses[keyof GetOneApiHouseholdsShoppingListsItemIdGetResponses];

export type UpdateOneApiHouseholdsShoppingListsItemIdPutData = {
    body: ShoppingListUpdate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/shopping/lists/{item_id}';
};

export type UpdateOneApiHouseholdsShoppingListsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiHouseholdsShoppingListsItemIdPutError = UpdateOneApiHouseholdsShoppingListsItemIdPutErrors[keyof UpdateOneApiHouseholdsShoppingListsItemIdPutErrors];

export type UpdateOneApiHouseholdsShoppingListsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListOut;
};

export type UpdateOneApiHouseholdsShoppingListsItemIdPutResponse = UpdateOneApiHouseholdsShoppingListsItemIdPutResponses[keyof UpdateOneApiHouseholdsShoppingListsItemIdPutResponses];

export type UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutData = {
    body: Array<ShoppingListMultiPurposeLabelUpdate>;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/shopping/lists/{item_id}/label-settings';
};

export type UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutError = UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutErrors[keyof UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutErrors];

export type UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListOut;
};

export type UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutResponse = UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutResponses[keyof UpdateLabelSettingsApiHouseholdsShoppingListsItemIdLabelSettingsPutResponses];

export type AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostData = {
    body: Array<ShoppingListAddRecipeParamsBulk>;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/shopping/lists/{item_id}/recipe';
};

export type AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostError = AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostErrors[keyof AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostErrors];

export type AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListOut;
};

export type AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostResponse = AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostResponses[keyof AddRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipePostResponses];

export type AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostData = {
    body?: ShoppingListAddRecipeParams | null;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
        recipe_id: string;
    };
    query?: never;
    url: '/api/households/shopping/lists/{item_id}/recipe/{recipe_id}';
};

export type AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostError = AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostErrors[keyof AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostErrors];

export type AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListOut;
};

export type AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostResponse = AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostResponses[keyof AddSingleRecipeIngredientsToListApiHouseholdsShoppingListsItemIdRecipeRecipeIdPostResponses];

export type RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostData = {
    body?: ShoppingListRemoveRecipeParams | null;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
        recipe_id: string;
    };
    query?: never;
    url: '/api/households/shopping/lists/{item_id}/recipe/{recipe_id}/delete';
};

export type RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostError = RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostErrors[keyof RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostErrors];

export type RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListOut;
};

export type RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostResponse = RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostResponses[keyof RemoveRecipeIngredientsFromListApiHouseholdsShoppingListsItemIdRecipeRecipeIdDeletePostResponses];

export type DeleteManyApiHouseholdsShoppingItemsDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        ids?: Array<string>;
    };
    url: '/api/households/shopping/items';
};

export type DeleteManyApiHouseholdsShoppingItemsDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteManyApiHouseholdsShoppingItemsDeleteError = DeleteManyApiHouseholdsShoppingItemsDeleteErrors[keyof DeleteManyApiHouseholdsShoppingItemsDeleteErrors];

export type DeleteManyApiHouseholdsShoppingItemsDeleteResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type DeleteManyApiHouseholdsShoppingItemsDeleteResponse = DeleteManyApiHouseholdsShoppingItemsDeleteResponses[keyof DeleteManyApiHouseholdsShoppingItemsDeleteResponses];

export type GetAllApiHouseholdsShoppingItemsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/shopping/items';
};

export type GetAllApiHouseholdsShoppingItemsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiHouseholdsShoppingItemsGetError = GetAllApiHouseholdsShoppingItemsGetErrors[keyof GetAllApiHouseholdsShoppingItemsGetErrors];

export type GetAllApiHouseholdsShoppingItemsGetResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListItemPagination;
};

export type GetAllApiHouseholdsShoppingItemsGetResponse = GetAllApiHouseholdsShoppingItemsGetResponses[keyof GetAllApiHouseholdsShoppingItemsGetResponses];

export type CreateOneApiHouseholdsShoppingItemsPostData = {
    body: ShoppingListItemCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/shopping/items';
};

export type CreateOneApiHouseholdsShoppingItemsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiHouseholdsShoppingItemsPostError = CreateOneApiHouseholdsShoppingItemsPostErrors[keyof CreateOneApiHouseholdsShoppingItemsPostErrors];

export type CreateOneApiHouseholdsShoppingItemsPostResponses = {
    /**
     * Successful Response
     */
    201: ShoppingListItemsCollectionOut;
};

export type CreateOneApiHouseholdsShoppingItemsPostResponse = CreateOneApiHouseholdsShoppingItemsPostResponses[keyof CreateOneApiHouseholdsShoppingItemsPostResponses];

export type UpdateManyApiHouseholdsShoppingItemsPutData = {
    body: Array<ShoppingListItemUpdateBulk>;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/shopping/items';
};

export type UpdateManyApiHouseholdsShoppingItemsPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateManyApiHouseholdsShoppingItemsPutError = UpdateManyApiHouseholdsShoppingItemsPutErrors[keyof UpdateManyApiHouseholdsShoppingItemsPutErrors];

export type UpdateManyApiHouseholdsShoppingItemsPutResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListItemsCollectionOut;
};

export type UpdateManyApiHouseholdsShoppingItemsPutResponse = UpdateManyApiHouseholdsShoppingItemsPutResponses[keyof UpdateManyApiHouseholdsShoppingItemsPutResponses];

export type CreateManyApiHouseholdsShoppingItemsCreateBulkPostData = {
    body: Array<ShoppingListItemCreate>;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/shopping/items/create-bulk';
};

export type CreateManyApiHouseholdsShoppingItemsCreateBulkPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateManyApiHouseholdsShoppingItemsCreateBulkPostError = CreateManyApiHouseholdsShoppingItemsCreateBulkPostErrors[keyof CreateManyApiHouseholdsShoppingItemsCreateBulkPostErrors];

export type CreateManyApiHouseholdsShoppingItemsCreateBulkPostResponses = {
    /**
     * Successful Response
     */
    201: ShoppingListItemsCollectionOut;
};

export type CreateManyApiHouseholdsShoppingItemsCreateBulkPostResponse = CreateManyApiHouseholdsShoppingItemsCreateBulkPostResponses[keyof CreateManyApiHouseholdsShoppingItemsCreateBulkPostResponses];

export type DeleteOneApiHouseholdsShoppingItemsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/shopping/items/{item_id}';
};

export type DeleteOneApiHouseholdsShoppingItemsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiHouseholdsShoppingItemsItemIdDeleteError = DeleteOneApiHouseholdsShoppingItemsItemIdDeleteErrors[keyof DeleteOneApiHouseholdsShoppingItemsItemIdDeleteErrors];

export type DeleteOneApiHouseholdsShoppingItemsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type DeleteOneApiHouseholdsShoppingItemsItemIdDeleteResponse = DeleteOneApiHouseholdsShoppingItemsItemIdDeleteResponses[keyof DeleteOneApiHouseholdsShoppingItemsItemIdDeleteResponses];

export type GetOneApiHouseholdsShoppingItemsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/shopping/items/{item_id}';
};

export type GetOneApiHouseholdsShoppingItemsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiHouseholdsShoppingItemsItemIdGetError = GetOneApiHouseholdsShoppingItemsItemIdGetErrors[keyof GetOneApiHouseholdsShoppingItemsItemIdGetErrors];

export type GetOneApiHouseholdsShoppingItemsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListItemOutOutput;
};

export type GetOneApiHouseholdsShoppingItemsItemIdGetResponse = GetOneApiHouseholdsShoppingItemsItemIdGetResponses[keyof GetOneApiHouseholdsShoppingItemsItemIdGetResponses];

export type UpdateOneApiHouseholdsShoppingItemsItemIdPutData = {
    body: ShoppingListItemUpdate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/shopping/items/{item_id}';
};

export type UpdateOneApiHouseholdsShoppingItemsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiHouseholdsShoppingItemsItemIdPutError = UpdateOneApiHouseholdsShoppingItemsItemIdPutErrors[keyof UpdateOneApiHouseholdsShoppingItemsItemIdPutErrors];

export type UpdateOneApiHouseholdsShoppingItemsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: ShoppingListItemsCollectionOut;
};

export type UpdateOneApiHouseholdsShoppingItemsItemIdPutResponse = UpdateOneApiHouseholdsShoppingItemsItemIdPutResponses[keyof UpdateOneApiHouseholdsShoppingItemsItemIdPutResponses];

export type GetAllApiHouseholdsWebhooksGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/webhooks';
};

export type GetAllApiHouseholdsWebhooksGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiHouseholdsWebhooksGetError = GetAllApiHouseholdsWebhooksGetErrors[keyof GetAllApiHouseholdsWebhooksGetErrors];

export type GetAllApiHouseholdsWebhooksGetResponses = {
    /**
     * Successful Response
     */
    200: WebhookPagination;
};

export type GetAllApiHouseholdsWebhooksGetResponse = GetAllApiHouseholdsWebhooksGetResponses[keyof GetAllApiHouseholdsWebhooksGetResponses];

export type CreateOneApiHouseholdsWebhooksPostData = {
    body: CreateWebhook;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/webhooks';
};

export type CreateOneApiHouseholdsWebhooksPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiHouseholdsWebhooksPostError = CreateOneApiHouseholdsWebhooksPostErrors[keyof CreateOneApiHouseholdsWebhooksPostErrors];

export type CreateOneApiHouseholdsWebhooksPostResponses = {
    /**
     * Successful Response
     */
    201: ReadWebhook;
};

export type CreateOneApiHouseholdsWebhooksPostResponse = CreateOneApiHouseholdsWebhooksPostResponses[keyof CreateOneApiHouseholdsWebhooksPostResponses];

export type RerunWebhooksApiHouseholdsWebhooksRerunPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/webhooks/rerun';
};

export type RerunWebhooksApiHouseholdsWebhooksRerunPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RerunWebhooksApiHouseholdsWebhooksRerunPostError = RerunWebhooksApiHouseholdsWebhooksRerunPostErrors[keyof RerunWebhooksApiHouseholdsWebhooksRerunPostErrors];

export type RerunWebhooksApiHouseholdsWebhooksRerunPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DeleteOneApiHouseholdsWebhooksItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/webhooks/{item_id}';
};

export type DeleteOneApiHouseholdsWebhooksItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiHouseholdsWebhooksItemIdDeleteError = DeleteOneApiHouseholdsWebhooksItemIdDeleteErrors[keyof DeleteOneApiHouseholdsWebhooksItemIdDeleteErrors];

export type DeleteOneApiHouseholdsWebhooksItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: ReadWebhook;
};

export type DeleteOneApiHouseholdsWebhooksItemIdDeleteResponse = DeleteOneApiHouseholdsWebhooksItemIdDeleteResponses[keyof DeleteOneApiHouseholdsWebhooksItemIdDeleteResponses];

export type GetOneApiHouseholdsWebhooksItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/webhooks/{item_id}';
};

export type GetOneApiHouseholdsWebhooksItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiHouseholdsWebhooksItemIdGetError = GetOneApiHouseholdsWebhooksItemIdGetErrors[keyof GetOneApiHouseholdsWebhooksItemIdGetErrors];

export type GetOneApiHouseholdsWebhooksItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: ReadWebhook;
};

export type GetOneApiHouseholdsWebhooksItemIdGetResponse = GetOneApiHouseholdsWebhooksItemIdGetResponses[keyof GetOneApiHouseholdsWebhooksItemIdGetResponses];

export type UpdateOneApiHouseholdsWebhooksItemIdPutData = {
    body: CreateWebhook;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/webhooks/{item_id}';
};

export type UpdateOneApiHouseholdsWebhooksItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiHouseholdsWebhooksItemIdPutError = UpdateOneApiHouseholdsWebhooksItemIdPutErrors[keyof UpdateOneApiHouseholdsWebhooksItemIdPutErrors];

export type UpdateOneApiHouseholdsWebhooksItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: ReadWebhook;
};

export type UpdateOneApiHouseholdsWebhooksItemIdPutResponse = UpdateOneApiHouseholdsWebhooksItemIdPutResponses[keyof UpdateOneApiHouseholdsWebhooksItemIdPutResponses];

export type TestOneApiHouseholdsWebhooksItemIdTestPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/webhooks/{item_id}/test';
};

export type TestOneApiHouseholdsWebhooksItemIdTestPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type TestOneApiHouseholdsWebhooksItemIdTestPostError = TestOneApiHouseholdsWebhooksItemIdTestPostErrors[keyof TestOneApiHouseholdsWebhooksItemIdTestPostErrors];

export type TestOneApiHouseholdsWebhooksItemIdTestPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAllApiHouseholdsMealplansRulesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/mealplans/rules';
};

export type GetAllApiHouseholdsMealplansRulesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiHouseholdsMealplansRulesGetError = GetAllApiHouseholdsMealplansRulesGetErrors[keyof GetAllApiHouseholdsMealplansRulesGetErrors];

export type GetAllApiHouseholdsMealplansRulesGetResponses = {
    /**
     * Successful Response
     */
    200: PlanRulesPagination;
};

export type GetAllApiHouseholdsMealplansRulesGetResponse = GetAllApiHouseholdsMealplansRulesGetResponses[keyof GetAllApiHouseholdsMealplansRulesGetResponses];

export type CreateOneApiHouseholdsMealplansRulesPostData = {
    body: PlanRulesCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/mealplans/rules';
};

export type CreateOneApiHouseholdsMealplansRulesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiHouseholdsMealplansRulesPostError = CreateOneApiHouseholdsMealplansRulesPostErrors[keyof CreateOneApiHouseholdsMealplansRulesPostErrors];

export type CreateOneApiHouseholdsMealplansRulesPostResponses = {
    /**
     * Successful Response
     */
    201: PlanRulesOut;
};

export type CreateOneApiHouseholdsMealplansRulesPostResponse = CreateOneApiHouseholdsMealplansRulesPostResponses[keyof CreateOneApiHouseholdsMealplansRulesPostResponses];

export type DeleteOneApiHouseholdsMealplansRulesItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/mealplans/rules/{item_id}';
};

export type DeleteOneApiHouseholdsMealplansRulesItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiHouseholdsMealplansRulesItemIdDeleteError = DeleteOneApiHouseholdsMealplansRulesItemIdDeleteErrors[keyof DeleteOneApiHouseholdsMealplansRulesItemIdDeleteErrors];

export type DeleteOneApiHouseholdsMealplansRulesItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: PlanRulesOut;
};

export type DeleteOneApiHouseholdsMealplansRulesItemIdDeleteResponse = DeleteOneApiHouseholdsMealplansRulesItemIdDeleteResponses[keyof DeleteOneApiHouseholdsMealplansRulesItemIdDeleteResponses];

export type GetOneApiHouseholdsMealplansRulesItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/mealplans/rules/{item_id}';
};

export type GetOneApiHouseholdsMealplansRulesItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiHouseholdsMealplansRulesItemIdGetError = GetOneApiHouseholdsMealplansRulesItemIdGetErrors[keyof GetOneApiHouseholdsMealplansRulesItemIdGetErrors];

export type GetOneApiHouseholdsMealplansRulesItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: PlanRulesOut;
};

export type GetOneApiHouseholdsMealplansRulesItemIdGetResponse = GetOneApiHouseholdsMealplansRulesItemIdGetResponses[keyof GetOneApiHouseholdsMealplansRulesItemIdGetResponses];

export type UpdateOneApiHouseholdsMealplansRulesItemIdPutData = {
    body: PlanRulesCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/households/mealplans/rules/{item_id}';
};

export type UpdateOneApiHouseholdsMealplansRulesItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiHouseholdsMealplansRulesItemIdPutError = UpdateOneApiHouseholdsMealplansRulesItemIdPutErrors[keyof UpdateOneApiHouseholdsMealplansRulesItemIdPutErrors];

export type UpdateOneApiHouseholdsMealplansRulesItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: PlanRulesOut;
};

export type UpdateOneApiHouseholdsMealplansRulesItemIdPutResponse = UpdateOneApiHouseholdsMealplansRulesItemIdPutResponses[keyof UpdateOneApiHouseholdsMealplansRulesItemIdPutResponses];

export type GetAllApiHouseholdsMealplansGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        start_date?: string | null;
        end_date?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/households/mealplans';
};

export type GetAllApiHouseholdsMealplansGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiHouseholdsMealplansGetError = GetAllApiHouseholdsMealplansGetErrors[keyof GetAllApiHouseholdsMealplansGetErrors];

export type GetAllApiHouseholdsMealplansGetResponses = {
    /**
     * Successful Response
     */
    200: PlanEntryPagination;
};

export type GetAllApiHouseholdsMealplansGetResponse = GetAllApiHouseholdsMealplansGetResponses[keyof GetAllApiHouseholdsMealplansGetResponses];

export type CreateOneApiHouseholdsMealplansPostData = {
    body: CreatePlanEntry;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/mealplans';
};

export type CreateOneApiHouseholdsMealplansPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiHouseholdsMealplansPostError = CreateOneApiHouseholdsMealplansPostErrors[keyof CreateOneApiHouseholdsMealplansPostErrors];

export type CreateOneApiHouseholdsMealplansPostResponses = {
    /**
     * Successful Response
     */
    201: ReadPlanEntry;
};

export type CreateOneApiHouseholdsMealplansPostResponse = CreateOneApiHouseholdsMealplansPostResponses[keyof CreateOneApiHouseholdsMealplansPostResponses];

export type GetTodaysMealsApiHouseholdsMealplansTodayGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/mealplans/today';
};

export type GetTodaysMealsApiHouseholdsMealplansTodayGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetTodaysMealsApiHouseholdsMealplansTodayGetError = GetTodaysMealsApiHouseholdsMealplansTodayGetErrors[keyof GetTodaysMealsApiHouseholdsMealplansTodayGetErrors];

export type GetTodaysMealsApiHouseholdsMealplansTodayGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateRandomMealApiHouseholdsMealplansRandomPostData = {
    body: CreateRandomEntry;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/households/mealplans/random';
};

export type CreateRandomMealApiHouseholdsMealplansRandomPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRandomMealApiHouseholdsMealplansRandomPostError = CreateRandomMealApiHouseholdsMealplansRandomPostErrors[keyof CreateRandomMealApiHouseholdsMealplansRandomPostErrors];

export type CreateRandomMealApiHouseholdsMealplansRandomPostResponses = {
    /**
     * Successful Response
     */
    200: ReadPlanEntry;
};

export type CreateRandomMealApiHouseholdsMealplansRandomPostResponse = CreateRandomMealApiHouseholdsMealplansRandomPostResponses[keyof CreateRandomMealApiHouseholdsMealplansRandomPostResponses];

export type DeleteOneApiHouseholdsMealplansItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: number;
    };
    query?: never;
    url: '/api/households/mealplans/{item_id}';
};

export type DeleteOneApiHouseholdsMealplansItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiHouseholdsMealplansItemIdDeleteError = DeleteOneApiHouseholdsMealplansItemIdDeleteErrors[keyof DeleteOneApiHouseholdsMealplansItemIdDeleteErrors];

export type DeleteOneApiHouseholdsMealplansItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: ReadPlanEntry;
};

export type DeleteOneApiHouseholdsMealplansItemIdDeleteResponse = DeleteOneApiHouseholdsMealplansItemIdDeleteResponses[keyof DeleteOneApiHouseholdsMealplansItemIdDeleteResponses];

export type GetOneApiHouseholdsMealplansItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: number;
    };
    query?: never;
    url: '/api/households/mealplans/{item_id}';
};

export type GetOneApiHouseholdsMealplansItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiHouseholdsMealplansItemIdGetError = GetOneApiHouseholdsMealplansItemIdGetErrors[keyof GetOneApiHouseholdsMealplansItemIdGetErrors];

export type GetOneApiHouseholdsMealplansItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: ReadPlanEntry;
};

export type GetOneApiHouseholdsMealplansItemIdGetResponse = GetOneApiHouseholdsMealplansItemIdGetResponses[keyof GetOneApiHouseholdsMealplansItemIdGetResponses];

export type UpdateOneApiHouseholdsMealplansItemIdPutData = {
    body: UpdatePlanEntry;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: number;
    };
    query?: never;
    url: '/api/households/mealplans/{item_id}';
};

export type UpdateOneApiHouseholdsMealplansItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiHouseholdsMealplansItemIdPutError = UpdateOneApiHouseholdsMealplansItemIdPutErrors[keyof UpdateOneApiHouseholdsMealplansItemIdPutErrors];

export type UpdateOneApiHouseholdsMealplansItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: ReadPlanEntry;
};

export type UpdateOneApiHouseholdsMealplansItemIdPutResponse = UpdateOneApiHouseholdsMealplansItemIdPutResponses[keyof UpdateOneApiHouseholdsMealplansItemIdPutResponses];

export type GetAllHouseholdsApiGroupsHouseholdsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/groups/households';
};

export type GetAllHouseholdsApiGroupsHouseholdsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllHouseholdsApiGroupsHouseholdsGetError = GetAllHouseholdsApiGroupsHouseholdsGetErrors[keyof GetAllHouseholdsApiGroupsHouseholdsGetErrors];

export type GetAllHouseholdsApiGroupsHouseholdsGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseHouseholdSummary;
};

export type GetAllHouseholdsApiGroupsHouseholdsGetResponse = GetAllHouseholdsApiGroupsHouseholdsGetResponses[keyof GetAllHouseholdsApiGroupsHouseholdsGetResponses];

export type GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        household_slug: string;
    };
    query?: never;
    url: '/api/groups/households/{household_slug}';
};

export type GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetError = GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetErrors[keyof GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetErrors];

export type GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetResponses = {
    /**
     * Successful Response
     */
    200: HouseholdSummary;
};

export type GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetResponse = GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetResponses[keyof GetOneHouseholdApiGroupsHouseholdsHouseholdSlugGetResponses];

export type GetLoggedInUserGroupApiGroupsSelfGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/self';
};

export type GetLoggedInUserGroupApiGroupsSelfGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLoggedInUserGroupApiGroupsSelfGetError = GetLoggedInUserGroupApiGroupsSelfGetErrors[keyof GetLoggedInUserGroupApiGroupsSelfGetErrors];

export type GetLoggedInUserGroupApiGroupsSelfGetResponses = {
    /**
     * Successful Response
     */
    200: GroupSummary;
};

export type GetLoggedInUserGroupApiGroupsSelfGetResponse = GetLoggedInUserGroupApiGroupsSelfGetResponses[keyof GetLoggedInUserGroupApiGroupsSelfGetResponses];

export type GetGroupMembersApiGroupsMembersGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/groups/members';
};

export type GetGroupMembersApiGroupsMembersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGroupMembersApiGroupsMembersGetError = GetGroupMembersApiGroupsMembersGetErrors[keyof GetGroupMembersApiGroupsMembersGetErrors];

export type GetGroupMembersApiGroupsMembersGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseUserSummary;
};

export type GetGroupMembersApiGroupsMembersGetResponse = GetGroupMembersApiGroupsMembersGetResponses[keyof GetGroupMembersApiGroupsMembersGetResponses];

export type GetGroupMemberApiGroupsMembersUsernameOrIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        username_or_id: string;
    };
    query?: never;
    url: '/api/groups/members/{username_or_id}';
};

export type GetGroupMemberApiGroupsMembersUsernameOrIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGroupMemberApiGroupsMembersUsernameOrIdGetError = GetGroupMemberApiGroupsMembersUsernameOrIdGetErrors[keyof GetGroupMemberApiGroupsMembersUsernameOrIdGetErrors];

export type GetGroupMemberApiGroupsMembersUsernameOrIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserSummary;
};

export type GetGroupMemberApiGroupsMembersUsernameOrIdGetResponse = GetGroupMemberApiGroupsMembersUsernameOrIdGetResponses[keyof GetGroupMemberApiGroupsMembersUsernameOrIdGetResponses];

export type GetGroupPreferencesApiGroupsPreferencesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/preferences';
};

export type GetGroupPreferencesApiGroupsPreferencesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGroupPreferencesApiGroupsPreferencesGetError = GetGroupPreferencesApiGroupsPreferencesGetErrors[keyof GetGroupPreferencesApiGroupsPreferencesGetErrors];

export type GetGroupPreferencesApiGroupsPreferencesGetResponses = {
    /**
     * Successful Response
     */
    200: ReadGroupPreferences;
};

export type GetGroupPreferencesApiGroupsPreferencesGetResponse = GetGroupPreferencesApiGroupsPreferencesGetResponses[keyof GetGroupPreferencesApiGroupsPreferencesGetResponses];

export type UpdateGroupPreferencesApiGroupsPreferencesPutData = {
    body: UpdateGroupPreferences;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/preferences';
};

export type UpdateGroupPreferencesApiGroupsPreferencesPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateGroupPreferencesApiGroupsPreferencesPutError = UpdateGroupPreferencesApiGroupsPreferencesPutErrors[keyof UpdateGroupPreferencesApiGroupsPreferencesPutErrors];

export type UpdateGroupPreferencesApiGroupsPreferencesPutResponses = {
    /**
     * Successful Response
     */
    200: ReadGroupPreferences;
};

export type UpdateGroupPreferencesApiGroupsPreferencesPutResponse = UpdateGroupPreferencesApiGroupsPreferencesPutResponses[keyof UpdateGroupPreferencesApiGroupsPreferencesPutResponses];

export type GetStorageApiGroupsStorageGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/storage';
};

export type GetStorageApiGroupsStorageGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStorageApiGroupsStorageGetError = GetStorageApiGroupsStorageGetErrors[keyof GetStorageApiGroupsStorageGetErrors];

export type GetStorageApiGroupsStorageGetResponses = {
    /**
     * Successful Response
     */
    200: GroupStorage;
};

export type GetStorageApiGroupsStorageGetResponse = GetStorageApiGroupsStorageGetResponses[keyof GetStorageApiGroupsStorageGetResponses];

export type StartDataMigrationApiGroupsMigrationsPostData = {
    body: BodyStartDataMigrationApiGroupsMigrationsPost;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/migrations';
};

export type StartDataMigrationApiGroupsMigrationsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StartDataMigrationApiGroupsMigrationsPostError = StartDataMigrationApiGroupsMigrationsPostErrors[keyof StartDataMigrationApiGroupsMigrationsPostErrors];

export type StartDataMigrationApiGroupsMigrationsPostResponses = {
    /**
     * Successful Response
     */
    200: ReportSummary;
};

export type StartDataMigrationApiGroupsMigrationsPostResponse = StartDataMigrationApiGroupsMigrationsPostResponses[keyof StartDataMigrationApiGroupsMigrationsPostResponses];

export type GetAllApiGroupsReportsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        report_type?: ReportCategory | null;
    };
    url: '/api/groups/reports';
};

export type GetAllApiGroupsReportsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiGroupsReportsGetError = GetAllApiGroupsReportsGetErrors[keyof GetAllApiGroupsReportsGetErrors];

export type GetAllApiGroupsReportsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ReportSummary>;
};

export type GetAllApiGroupsReportsGetResponse = GetAllApiGroupsReportsGetResponses[keyof GetAllApiGroupsReportsGetResponses];

export type DeleteOneApiGroupsReportsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/groups/reports/{item_id}';
};

export type DeleteOneApiGroupsReportsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiGroupsReportsItemIdDeleteError = DeleteOneApiGroupsReportsItemIdDeleteErrors[keyof DeleteOneApiGroupsReportsItemIdDeleteErrors];

export type DeleteOneApiGroupsReportsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetOneApiGroupsReportsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/groups/reports/{item_id}';
};

export type GetOneApiGroupsReportsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiGroupsReportsItemIdGetError = GetOneApiGroupsReportsItemIdGetErrors[keyof GetOneApiGroupsReportsItemIdGetErrors];

export type GetOneApiGroupsReportsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: ReportOut;
};

export type GetOneApiGroupsReportsItemIdGetResponse = GetOneApiGroupsReportsItemIdGetResponses[keyof GetOneApiGroupsReportsItemIdGetResponses];

export type GetAllApiGroupsLabelsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/groups/labels';
};

export type GetAllApiGroupsLabelsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiGroupsLabelsGetError = GetAllApiGroupsLabelsGetErrors[keyof GetAllApiGroupsLabelsGetErrors];

export type GetAllApiGroupsLabelsGetResponses = {
    /**
     * Successful Response
     */
    200: MultiPurposeLabelPagination;
};

export type GetAllApiGroupsLabelsGetResponse = GetAllApiGroupsLabelsGetResponses[keyof GetAllApiGroupsLabelsGetResponses];

export type CreateOneApiGroupsLabelsPostData = {
    body: MultiPurposeLabelCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/labels';
};

export type CreateOneApiGroupsLabelsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiGroupsLabelsPostError = CreateOneApiGroupsLabelsPostErrors[keyof CreateOneApiGroupsLabelsPostErrors];

export type CreateOneApiGroupsLabelsPostResponses = {
    /**
     * Successful Response
     */
    200: MultiPurposeLabelOut;
};

export type CreateOneApiGroupsLabelsPostResponse = CreateOneApiGroupsLabelsPostResponses[keyof CreateOneApiGroupsLabelsPostResponses];

export type DeleteOneApiGroupsLabelsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/groups/labels/{item_id}';
};

export type DeleteOneApiGroupsLabelsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiGroupsLabelsItemIdDeleteError = DeleteOneApiGroupsLabelsItemIdDeleteErrors[keyof DeleteOneApiGroupsLabelsItemIdDeleteErrors];

export type DeleteOneApiGroupsLabelsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: MultiPurposeLabelOut;
};

export type DeleteOneApiGroupsLabelsItemIdDeleteResponse = DeleteOneApiGroupsLabelsItemIdDeleteResponses[keyof DeleteOneApiGroupsLabelsItemIdDeleteResponses];

export type GetOneApiGroupsLabelsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/groups/labels/{item_id}';
};

export type GetOneApiGroupsLabelsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiGroupsLabelsItemIdGetError = GetOneApiGroupsLabelsItemIdGetErrors[keyof GetOneApiGroupsLabelsItemIdGetErrors];

export type GetOneApiGroupsLabelsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: MultiPurposeLabelOut;
};

export type GetOneApiGroupsLabelsItemIdGetResponse = GetOneApiGroupsLabelsItemIdGetResponses[keyof GetOneApiGroupsLabelsItemIdGetResponses];

export type UpdateOneApiGroupsLabelsItemIdPutData = {
    body: MultiPurposeLabelUpdate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/groups/labels/{item_id}';
};

export type UpdateOneApiGroupsLabelsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiGroupsLabelsItemIdPutError = UpdateOneApiGroupsLabelsItemIdPutErrors[keyof UpdateOneApiGroupsLabelsItemIdPutErrors];

export type UpdateOneApiGroupsLabelsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: MultiPurposeLabelOut;
};

export type UpdateOneApiGroupsLabelsItemIdPutResponse = UpdateOneApiGroupsLabelsItemIdPutResponses[keyof UpdateOneApiGroupsLabelsItemIdPutResponses];

export type SeedFoodsApiGroupsSeedersFoodsPostData = {
    body: SeederConfig;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/seeders/foods';
};

export type SeedFoodsApiGroupsSeedersFoodsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SeedFoodsApiGroupsSeedersFoodsPostError = SeedFoodsApiGroupsSeedersFoodsPostErrors[keyof SeedFoodsApiGroupsSeedersFoodsPostErrors];

export type SeedFoodsApiGroupsSeedersFoodsPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type SeedFoodsApiGroupsSeedersFoodsPostResponse = SeedFoodsApiGroupsSeedersFoodsPostResponses[keyof SeedFoodsApiGroupsSeedersFoodsPostResponses];

export type SeedLabelsApiGroupsSeedersLabelsPostData = {
    body: SeederConfig;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/seeders/labels';
};

export type SeedLabelsApiGroupsSeedersLabelsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SeedLabelsApiGroupsSeedersLabelsPostError = SeedLabelsApiGroupsSeedersLabelsPostErrors[keyof SeedLabelsApiGroupsSeedersLabelsPostErrors];

export type SeedLabelsApiGroupsSeedersLabelsPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type SeedLabelsApiGroupsSeedersLabelsPostResponse = SeedLabelsApiGroupsSeedersLabelsPostResponses[keyof SeedLabelsApiGroupsSeedersLabelsPostResponses];

export type SeedUnitsApiGroupsSeedersUnitsPostData = {
    body: SeederConfig;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/groups/seeders/units';
};

export type SeedUnitsApiGroupsSeedersUnitsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SeedUnitsApiGroupsSeedersUnitsPostError = SeedUnitsApiGroupsSeedersUnitsPostErrors[keyof SeedUnitsApiGroupsSeedersUnitsPostErrors];

export type SeedUnitsApiGroupsSeedersUnitsPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type SeedUnitsApiGroupsSeedersUnitsPostResponse = SeedUnitsApiGroupsSeedersUnitsPostResponses[keyof SeedUnitsApiGroupsSeedersUnitsPostResponses];

export type GetRecipeFormatsAndTemplatesApiRecipesExportsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/exports';
};

export type GetRecipeFormatsAndTemplatesApiRecipesExportsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeFormatsAndTemplatesApiRecipesExportsGetError = GetRecipeFormatsAndTemplatesApiRecipesExportsGetErrors[keyof GetRecipeFormatsAndTemplatesApiRecipesExportsGetErrors];

export type GetRecipeFormatsAndTemplatesApiRecipesExportsGetResponses = {
    /**
     * Successful Response
     */
    200: FormatResponse;
};

export type GetRecipeFormatsAndTemplatesApiRecipesExportsGetResponse = GetRecipeFormatsAndTemplatesApiRecipesExportsGetResponses[keyof GetRecipeFormatsAndTemplatesApiRecipesExportsGetResponses];

export type GetRecipeAsFormatApiRecipesSlugExportsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query: {
        template_name: string;
    };
    url: '/api/recipes/{slug}/exports';
};

export type GetRecipeAsFormatApiRecipesSlugExportsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeAsFormatApiRecipesSlugExportsGetError = GetRecipeAsFormatApiRecipesSlugExportsGetErrors[keyof GetRecipeAsFormatApiRecipesSlugExportsGetErrors];

export type GetRecipeAsFormatApiRecipesSlugExportsGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetRecipeZipTokenApiRecipesSlugExportsPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}/exports';
};

export type GetRecipeZipTokenApiRecipesSlugExportsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeZipTokenApiRecipesSlugExportsPostError = GetRecipeZipTokenApiRecipesSlugExportsPostErrors[keyof GetRecipeZipTokenApiRecipesSlugExportsPostErrors];

export type GetRecipeZipTokenApiRecipesSlugExportsPostResponses = {
    /**
     * Successful Response
     */
    200: RecipeZipTokenResponse;
};

export type GetRecipeZipTokenApiRecipesSlugExportsPostResponse = GetRecipeZipTokenApiRecipesSlugExportsPostResponses[keyof GetRecipeZipTokenApiRecipesSlugExportsPostResponses];

export type GetRecipeAsZipApiRecipesSlugExportsZipGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query: {
        token: string;
    };
    url: '/api/recipes/{slug}/exports/zip';
};

export type GetRecipeAsZipApiRecipesSlugExportsZipGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeAsZipApiRecipesSlugExportsZipGetError = GetRecipeAsZipApiRecipesSlugExportsZipGetErrors[keyof GetRecipeAsZipApiRecipesSlugExportsZipGetErrors];

export type GetRecipeAsZipApiRecipesSlugExportsZipGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type TestParseRecipeUrlApiRecipesTestScrapeUrlPostData = {
    body: ScrapeRecipeTest;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/test-scrape-url';
};

export type TestParseRecipeUrlApiRecipesTestScrapeUrlPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type TestParseRecipeUrlApiRecipesTestScrapeUrlPostError = TestParseRecipeUrlApiRecipesTestScrapeUrlPostErrors[keyof TestParseRecipeUrlApiRecipesTestScrapeUrlPostErrors];

export type TestParseRecipeUrlApiRecipesTestScrapeUrlPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateRecipeFromHtmlOrJsonApiRecipesCreateHtmlOrJsonPostData = {
    body: ScrapeRecipeData;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/create/html-or-json';
};

export type CreateRecipeFromHtmlOrJsonApiRecipesCreateHtmlOrJsonPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRecipeFromHtmlOrJsonApiRecipesCreateHtmlOrJsonPostError = CreateRecipeFromHtmlOrJsonApiRecipesCreateHtmlOrJsonPostErrors[keyof CreateRecipeFromHtmlOrJsonApiRecipesCreateHtmlOrJsonPostErrors];

export type CreateRecipeFromHtmlOrJsonApiRecipesCreateHtmlOrJsonPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type ParseRecipeUrlApiRecipesCreateUrlPostData = {
    body: ScrapeRecipe;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/create/url';
};

export type ParseRecipeUrlApiRecipesCreateUrlPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ParseRecipeUrlApiRecipesCreateUrlPostError = ParseRecipeUrlApiRecipesCreateUrlPostErrors[keyof ParseRecipeUrlApiRecipesCreateUrlPostErrors];

export type ParseRecipeUrlApiRecipesCreateUrlPostResponses = {
    /**
     * Successful Response
     */
    201: string;
};

export type ParseRecipeUrlApiRecipesCreateUrlPostResponse = ParseRecipeUrlApiRecipesCreateUrlPostResponses[keyof ParseRecipeUrlApiRecipesCreateUrlPostResponses];

export type ParseRecipeUrlBulkApiRecipesCreateUrlBulkPostData = {
    body: CreateRecipeByUrlBulk;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/create/url/bulk';
};

export type ParseRecipeUrlBulkApiRecipesCreateUrlBulkPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ParseRecipeUrlBulkApiRecipesCreateUrlBulkPostError = ParseRecipeUrlBulkApiRecipesCreateUrlBulkPostErrors[keyof ParseRecipeUrlBulkApiRecipesCreateUrlBulkPostErrors];

export type ParseRecipeUrlBulkApiRecipesCreateUrlBulkPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type CreateRecipeFromZipApiRecipesCreateZipPostData = {
    body: BodyCreateRecipeFromZipApiRecipesCreateZipPost;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/create/zip';
};

export type CreateRecipeFromZipApiRecipesCreateZipPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRecipeFromZipApiRecipesCreateZipPostError = CreateRecipeFromZipApiRecipesCreateZipPostErrors[keyof CreateRecipeFromZipApiRecipesCreateZipPostErrors];

export type CreateRecipeFromZipApiRecipesCreateZipPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type CreateRecipeFromImageApiRecipesCreateImagePostData = {
    body: BodyCreateRecipeFromImageApiRecipesCreateImagePost;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        translateLanguage?: string | null;
    };
    url: '/api/recipes/create/image';
};

export type CreateRecipeFromImageApiRecipesCreateImagePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateRecipeFromImageApiRecipesCreateImagePostError = CreateRecipeFromImageApiRecipesCreateImagePostErrors[keyof CreateRecipeFromImageApiRecipesCreateImagePostErrors];

export type CreateRecipeFromImageApiRecipesCreateImagePostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type GetAllApiRecipesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        categories?: Array<string> | null;
        tags?: Array<string> | null;
        tools?: Array<string> | null;
        foods?: Array<string> | null;
        households?: Array<string> | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
        cookbook?: string | null;
        requireAllCategories?: boolean;
        requireAllTags?: boolean;
        requireAllTools?: boolean;
        requireAllFoods?: boolean;
        search?: string | null;
    };
    url: '/api/recipes';
};

export type GetAllApiRecipesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiRecipesGetError = GetAllApiRecipesGetErrors[keyof GetAllApiRecipesGetErrors];

export type GetAllApiRecipesGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseRecipeSummary;
};

export type GetAllApiRecipesGetResponse = GetAllApiRecipesGetResponses[keyof GetAllApiRecipesGetResponses];

export type PatchManyApiRecipesPatchData = {
    body: Array<RecipeInput>;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes';
};

export type PatchManyApiRecipesPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchManyApiRecipesPatchError = PatchManyApiRecipesPatchErrors[keyof PatchManyApiRecipesPatchErrors];

export type PatchManyApiRecipesPatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type CreateOneApiRecipesPostData = {
    body: CreateRecipe;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes';
};

export type CreateOneApiRecipesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiRecipesPostError = CreateOneApiRecipesPostErrors[keyof CreateOneApiRecipesPostErrors];

export type CreateOneApiRecipesPostResponses = {
    /**
     * Successful Response
     */
    201: string;
};

export type CreateOneApiRecipesPostResponse = CreateOneApiRecipesPostResponses[keyof CreateOneApiRecipesPostResponses];

export type UpdateManyApiRecipesPutData = {
    body: Array<RecipeInput>;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes';
};

export type UpdateManyApiRecipesPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateManyApiRecipesPutError = UpdateManyApiRecipesPutErrors[keyof UpdateManyApiRecipesPutErrors];

export type UpdateManyApiRecipesPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type SuggestRecipesApiRecipesSuggestionsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        foods?: Array<string> | null;
        tools?: Array<string> | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        limit?: number;
        maxMissingFoods?: number;
        maxMissingTools?: number;
        includeFoodsOnHand?: boolean;
        includeToolsOnHand?: boolean;
    };
    url: '/api/recipes/suggestions';
};

export type SuggestRecipesApiRecipesSuggestionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SuggestRecipesApiRecipesSuggestionsGetError = SuggestRecipesApiRecipesSuggestionsGetErrors[keyof SuggestRecipesApiRecipesSuggestionsGetErrors];

export type SuggestRecipesApiRecipesSuggestionsGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeSuggestionResponse;
};

export type SuggestRecipesApiRecipesSuggestionsGetResponse = SuggestRecipesApiRecipesSuggestionsGetResponses[keyof SuggestRecipesApiRecipesSuggestionsGetResponses];

export type DeleteOneApiRecipesSlugDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}';
};

export type DeleteOneApiRecipesSlugDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiRecipesSlugDeleteError = DeleteOneApiRecipesSlugDeleteErrors[keyof DeleteOneApiRecipesSlugDeleteErrors];

export type DeleteOneApiRecipesSlugDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetOneApiRecipesSlugGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        /**
         * A recipe's slug or id
         */
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}';
};

export type GetOneApiRecipesSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiRecipesSlugGetError = GetOneApiRecipesSlugGetErrors[keyof GetOneApiRecipesSlugGetErrors];

export type GetOneApiRecipesSlugGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeOutput;
};

export type GetOneApiRecipesSlugGetResponse = GetOneApiRecipesSlugGetResponses[keyof GetOneApiRecipesSlugGetResponses];

export type PatchOneApiRecipesSlugPatchData = {
    body: RecipeInput;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}';
};

export type PatchOneApiRecipesSlugPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchOneApiRecipesSlugPatchError = PatchOneApiRecipesSlugPatchErrors[keyof PatchOneApiRecipesSlugPatchErrors];

export type PatchOneApiRecipesSlugPatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateOneApiRecipesSlugPutData = {
    body: RecipeInput;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}';
};

export type UpdateOneApiRecipesSlugPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiRecipesSlugPutError = UpdateOneApiRecipesSlugPutErrors[keyof UpdateOneApiRecipesSlugPutErrors];

export type UpdateOneApiRecipesSlugPutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DuplicateOneApiRecipesSlugDuplicatePostData = {
    body: RecipeDuplicate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}/duplicate';
};

export type DuplicateOneApiRecipesSlugDuplicatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DuplicateOneApiRecipesSlugDuplicatePostError = DuplicateOneApiRecipesSlugDuplicatePostErrors[keyof DuplicateOneApiRecipesSlugDuplicatePostErrors];

export type DuplicateOneApiRecipesSlugDuplicatePostResponses = {
    /**
     * Successful Response
     */
    201: RecipeOutput;
};

export type DuplicateOneApiRecipesSlugDuplicatePostResponse = DuplicateOneApiRecipesSlugDuplicatePostResponses[keyof DuplicateOneApiRecipesSlugDuplicatePostResponses];

export type UpdateLastMadeApiRecipesSlugLastMadePatchData = {
    body: RecipeLastMade;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}/last-made';
};

export type UpdateLastMadeApiRecipesSlugLastMadePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateLastMadeApiRecipesSlugLastMadePatchError = UpdateLastMadeApiRecipesSlugLastMadePatchErrors[keyof UpdateLastMadeApiRecipesSlugLastMadePatchErrors];

export type UpdateLastMadeApiRecipesSlugLastMadePatchResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ScrapeImageUrlApiRecipesSlugImagePostData = {
    body: ScrapeRecipe;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}/image';
};

export type ScrapeImageUrlApiRecipesSlugImagePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ScrapeImageUrlApiRecipesSlugImagePostError = ScrapeImageUrlApiRecipesSlugImagePostErrors[keyof ScrapeImageUrlApiRecipesSlugImagePostErrors];

export type ScrapeImageUrlApiRecipesSlugImagePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateRecipeImageApiRecipesSlugImagePutData = {
    body: BodyUpdateRecipeImageApiRecipesSlugImagePut;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}/image';
};

export type UpdateRecipeImageApiRecipesSlugImagePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateRecipeImageApiRecipesSlugImagePutError = UpdateRecipeImageApiRecipesSlugImagePutErrors[keyof UpdateRecipeImageApiRecipesSlugImagePutErrors];

export type UpdateRecipeImageApiRecipesSlugImagePutResponses = {
    /**
     * Successful Response
     */
    200: UpdateImageResponse;
};

export type UpdateRecipeImageApiRecipesSlugImagePutResponse = UpdateRecipeImageApiRecipesSlugImagePutResponses[keyof UpdateRecipeImageApiRecipesSlugImagePutResponses];

export type UploadRecipeAssetApiRecipesSlugAssetsPostData = {
    body: BodyUploadRecipeAssetApiRecipesSlugAssetsPost;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}/assets';
};

export type UploadRecipeAssetApiRecipesSlugAssetsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadRecipeAssetApiRecipesSlugAssetsPostError = UploadRecipeAssetApiRecipesSlugAssetsPostErrors[keyof UploadRecipeAssetApiRecipesSlugAssetsPostErrors];

export type UploadRecipeAssetApiRecipesSlugAssetsPostResponses = {
    /**
     * Successful Response
     */
    200: RecipeAsset;
};

export type UploadRecipeAssetApiRecipesSlugAssetsPostResponse = UploadRecipeAssetApiRecipesSlugAssetsPostResponses[keyof UploadRecipeAssetApiRecipesSlugAssetsPostResponses];

export type GetRecipeCommentsApiRecipesSlugCommentsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        slug: string;
    };
    query?: never;
    url: '/api/recipes/{slug}/comments';
};

export type GetRecipeCommentsApiRecipesSlugCommentsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeCommentsApiRecipesSlugCommentsGetError = GetRecipeCommentsApiRecipesSlugCommentsGetErrors[keyof GetRecipeCommentsApiRecipesSlugCommentsGetErrors];

export type GetRecipeCommentsApiRecipesSlugCommentsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<RecipeCommentOutOutput>;
};

export type GetRecipeCommentsApiRecipesSlugCommentsGetResponse = GetRecipeCommentsApiRecipesSlugCommentsGetResponses[keyof GetRecipeCommentsApiRecipesSlugCommentsGetResponses];

export type BulkTagRecipesApiRecipesBulkActionsTagPostData = {
    body: AssignTags;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/bulk-actions/tag';
};

export type BulkTagRecipesApiRecipesBulkActionsTagPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BulkTagRecipesApiRecipesBulkActionsTagPostError = BulkTagRecipesApiRecipesBulkActionsTagPostErrors[keyof BulkTagRecipesApiRecipesBulkActionsTagPostErrors];

export type BulkTagRecipesApiRecipesBulkActionsTagPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type BulkSettingsRecipesApiRecipesBulkActionsSettingsPostData = {
    body: AssignSettings;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/bulk-actions/settings';
};

export type BulkSettingsRecipesApiRecipesBulkActionsSettingsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BulkSettingsRecipesApiRecipesBulkActionsSettingsPostError = BulkSettingsRecipesApiRecipesBulkActionsSettingsPostErrors[keyof BulkSettingsRecipesApiRecipesBulkActionsSettingsPostErrors];

export type BulkSettingsRecipesApiRecipesBulkActionsSettingsPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type BulkCategorizeRecipesApiRecipesBulkActionsCategorizePostData = {
    body: AssignCategories;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/bulk-actions/categorize';
};

export type BulkCategorizeRecipesApiRecipesBulkActionsCategorizePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BulkCategorizeRecipesApiRecipesBulkActionsCategorizePostError = BulkCategorizeRecipesApiRecipesBulkActionsCategorizePostErrors[keyof BulkCategorizeRecipesApiRecipesBulkActionsCategorizePostErrors];

export type BulkCategorizeRecipesApiRecipesBulkActionsCategorizePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type BulkDeleteRecipesApiRecipesBulkActionsDeletePostData = {
    body: DeleteRecipes;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/bulk-actions/delete';
};

export type BulkDeleteRecipesApiRecipesBulkActionsDeletePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BulkDeleteRecipesApiRecipesBulkActionsDeletePostError = BulkDeleteRecipesApiRecipesBulkActionsDeletePostErrors[keyof BulkDeleteRecipesApiRecipesBulkActionsDeletePostErrors];

export type BulkDeleteRecipesApiRecipesBulkActionsDeletePostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetExportedDataApiRecipesBulkActionsExportGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/bulk-actions/export';
};

export type GetExportedDataApiRecipesBulkActionsExportGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetExportedDataApiRecipesBulkActionsExportGetError = GetExportedDataApiRecipesBulkActionsExportGetErrors[keyof GetExportedDataApiRecipesBulkActionsExportGetErrors];

export type GetExportedDataApiRecipesBulkActionsExportGetResponses = {
    /**
     * Successful Response
     */
    200: Array<GroupDataExport>;
};

export type GetExportedDataApiRecipesBulkActionsExportGetResponse = GetExportedDataApiRecipesBulkActionsExportGetResponses[keyof GetExportedDataApiRecipesBulkActionsExportGetResponses];

export type BulkExportRecipesApiRecipesBulkActionsExportPostData = {
    body: ExportRecipes;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/bulk-actions/export';
};

export type BulkExportRecipesApiRecipesBulkActionsExportPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type BulkExportRecipesApiRecipesBulkActionsExportPostError = BulkExportRecipesApiRecipesBulkActionsExportPostErrors[keyof BulkExportRecipesApiRecipesBulkActionsExportPostErrors];

export type BulkExportRecipesApiRecipesBulkActionsExportPostResponses = {
    /**
     * Successful Response
     */
    202: unknown;
};

export type GetExportedDataTokenApiRecipesBulkActionsExportDownloadGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query: {
        path: string;
    };
    url: '/api/recipes/bulk-actions/export/download';
};

export type GetExportedDataTokenApiRecipesBulkActionsExportDownloadGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetExportedDataTokenApiRecipesBulkActionsExportDownloadGetError = GetExportedDataTokenApiRecipesBulkActionsExportDownloadGetErrors[keyof GetExportedDataTokenApiRecipesBulkActionsExportDownloadGetErrors];

export type GetExportedDataTokenApiRecipesBulkActionsExportDownloadGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/bulk-actions/export/purge';
};

export type PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteError = PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteErrors[keyof PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteErrors];

export type PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteResponse = PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteResponses[keyof PurgeExportDataApiRecipesBulkActionsExportPurgeDeleteResponses];

export type GetSharedRecipeApiRecipesSharedTokenIdGetData = {
    body?: never;
    path: {
        token_id: string;
    };
    query?: never;
    url: '/api/recipes/shared/{token_id}';
};

export type GetSharedRecipeApiRecipesSharedTokenIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSharedRecipeApiRecipesSharedTokenIdGetError = GetSharedRecipeApiRecipesSharedTokenIdGetErrors[keyof GetSharedRecipeApiRecipesSharedTokenIdGetErrors];

export type GetSharedRecipeApiRecipesSharedTokenIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeOutput;
};

export type GetSharedRecipeApiRecipesSharedTokenIdGetResponse = GetSharedRecipeApiRecipesSharedTokenIdGetResponses[keyof GetSharedRecipeApiRecipesSharedTokenIdGetResponses];

export type GetAllApiRecipesTimelineEventsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/recipes/timeline/events';
};

export type GetAllApiRecipesTimelineEventsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiRecipesTimelineEventsGetError = GetAllApiRecipesTimelineEventsGetErrors[keyof GetAllApiRecipesTimelineEventsGetErrors];

export type GetAllApiRecipesTimelineEventsGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeTimelineEventPagination;
};

export type GetAllApiRecipesTimelineEventsGetResponse = GetAllApiRecipesTimelineEventsGetResponses[keyof GetAllApiRecipesTimelineEventsGetResponses];

export type CreateOneApiRecipesTimelineEventsPostData = {
    body: RecipeTimelineEventIn;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/recipes/timeline/events';
};

export type CreateOneApiRecipesTimelineEventsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiRecipesTimelineEventsPostError = CreateOneApiRecipesTimelineEventsPostErrors[keyof CreateOneApiRecipesTimelineEventsPostErrors];

export type CreateOneApiRecipesTimelineEventsPostResponses = {
    /**
     * Successful Response
     */
    201: RecipeTimelineEventOut;
};

export type CreateOneApiRecipesTimelineEventsPostResponse = CreateOneApiRecipesTimelineEventsPostResponses[keyof CreateOneApiRecipesTimelineEventsPostResponses];

export type DeleteOneApiRecipesTimelineEventsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/recipes/timeline/events/{item_id}';
};

export type DeleteOneApiRecipesTimelineEventsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiRecipesTimelineEventsItemIdDeleteError = DeleteOneApiRecipesTimelineEventsItemIdDeleteErrors[keyof DeleteOneApiRecipesTimelineEventsItemIdDeleteErrors];

export type DeleteOneApiRecipesTimelineEventsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: RecipeTimelineEventOut;
};

export type DeleteOneApiRecipesTimelineEventsItemIdDeleteResponse = DeleteOneApiRecipesTimelineEventsItemIdDeleteResponses[keyof DeleteOneApiRecipesTimelineEventsItemIdDeleteResponses];

export type GetOneApiRecipesTimelineEventsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/recipes/timeline/events/{item_id}';
};

export type GetOneApiRecipesTimelineEventsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiRecipesTimelineEventsItemIdGetError = GetOneApiRecipesTimelineEventsItemIdGetErrors[keyof GetOneApiRecipesTimelineEventsItemIdGetErrors];

export type GetOneApiRecipesTimelineEventsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeTimelineEventOut;
};

export type GetOneApiRecipesTimelineEventsItemIdGetResponse = GetOneApiRecipesTimelineEventsItemIdGetResponses[keyof GetOneApiRecipesTimelineEventsItemIdGetResponses];

export type UpdateOneApiRecipesTimelineEventsItemIdPutData = {
    body: RecipeTimelineEventUpdate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/recipes/timeline/events/{item_id}';
};

export type UpdateOneApiRecipesTimelineEventsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiRecipesTimelineEventsItemIdPutError = UpdateOneApiRecipesTimelineEventsItemIdPutErrors[keyof UpdateOneApiRecipesTimelineEventsItemIdPutErrors];

export type UpdateOneApiRecipesTimelineEventsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: RecipeTimelineEventOut;
};

export type UpdateOneApiRecipesTimelineEventsItemIdPutResponse = UpdateOneApiRecipesTimelineEventsItemIdPutResponses[keyof UpdateOneApiRecipesTimelineEventsItemIdPutResponses];

export type UpdateEventImageApiRecipesTimelineEventsItemIdImagePutData = {
    body: BodyUpdateEventImageApiRecipesTimelineEventsItemIdImagePut;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/recipes/timeline/events/{item_id}/image';
};

export type UpdateEventImageApiRecipesTimelineEventsItemIdImagePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateEventImageApiRecipesTimelineEventsItemIdImagePutError = UpdateEventImageApiRecipesTimelineEventsItemIdImagePutErrors[keyof UpdateEventImageApiRecipesTimelineEventsItemIdImagePutErrors];

export type UpdateEventImageApiRecipesTimelineEventsItemIdImagePutResponses = {
    /**
     * Successful Response
     */
    200: UpdateImageResponse;
};

export type UpdateEventImageApiRecipesTimelineEventsItemIdImagePutResponse = UpdateEventImageApiRecipesTimelineEventsItemIdImagePutResponses[keyof UpdateEventImageApiRecipesTimelineEventsItemIdImagePutResponses];

export type GetAllApiOrganizersCategoriesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/organizers/categories';
};

export type GetAllApiOrganizersCategoriesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiOrganizersCategoriesGetError = GetAllApiOrganizersCategoriesGetErrors[keyof GetAllApiOrganizersCategoriesGetErrors];

export type GetAllApiOrganizersCategoriesGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeCategoryPagination;
};

export type GetAllApiOrganizersCategoriesGetResponse = GetAllApiOrganizersCategoriesGetResponses[keyof GetAllApiOrganizersCategoriesGetResponses];

export type CreateOneApiOrganizersCategoriesPostData = {
    body: CategoryIn;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/organizers/categories';
};

export type CreateOneApiOrganizersCategoriesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiOrganizersCategoriesPostError = CreateOneApiOrganizersCategoriesPostErrors[keyof CreateOneApiOrganizersCategoriesPostErrors];

export type CreateOneApiOrganizersCategoriesPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type GetAllEmptyApiOrganizersCategoriesEmptyGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/organizers/categories/empty';
};

export type GetAllEmptyApiOrganizersCategoriesEmptyGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllEmptyApiOrganizersCategoriesEmptyGetError = GetAllEmptyApiOrganizersCategoriesEmptyGetErrors[keyof GetAllEmptyApiOrganizersCategoriesEmptyGetErrors];

export type GetAllEmptyApiOrganizersCategoriesEmptyGetResponses = {
    /**
     * Successful Response
     */
    200: Array<CategoryBase>;
};

export type GetAllEmptyApiOrganizersCategoriesEmptyGetResponse = GetAllEmptyApiOrganizersCategoriesEmptyGetResponses[keyof GetAllEmptyApiOrganizersCategoriesEmptyGetResponses];

export type DeleteOneApiOrganizersCategoriesItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/categories/{item_id}';
};

export type DeleteOneApiOrganizersCategoriesItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiOrganizersCategoriesItemIdDeleteError = DeleteOneApiOrganizersCategoriesItemIdDeleteErrors[keyof DeleteOneApiOrganizersCategoriesItemIdDeleteErrors];

export type DeleteOneApiOrganizersCategoriesItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetOneApiOrganizersCategoriesItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/categories/{item_id}';
};

export type GetOneApiOrganizersCategoriesItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiOrganizersCategoriesItemIdGetError = GetOneApiOrganizersCategoriesItemIdGetErrors[keyof GetOneApiOrganizersCategoriesItemIdGetErrors];

export type GetOneApiOrganizersCategoriesItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: CategorySummary;
};

export type GetOneApiOrganizersCategoriesItemIdGetResponse = GetOneApiOrganizersCategoriesItemIdGetResponses[keyof GetOneApiOrganizersCategoriesItemIdGetResponses];

export type UpdateOneApiOrganizersCategoriesItemIdPutData = {
    body: CategoryIn;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/categories/{item_id}';
};

export type UpdateOneApiOrganizersCategoriesItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiOrganizersCategoriesItemIdPutError = UpdateOneApiOrganizersCategoriesItemIdPutErrors[keyof UpdateOneApiOrganizersCategoriesItemIdPutErrors];

export type UpdateOneApiOrganizersCategoriesItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: CategorySummary;
};

export type UpdateOneApiOrganizersCategoriesItemIdPutResponse = UpdateOneApiOrganizersCategoriesItemIdPutResponses[keyof UpdateOneApiOrganizersCategoriesItemIdPutResponses];

export type GetOneBySlugApiOrganizersCategoriesSlugCategorySlugGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        category_slug: string;
    };
    query?: never;
    url: '/api/organizers/categories/slug/{category_slug}';
};

export type GetOneBySlugApiOrganizersCategoriesSlugCategorySlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneBySlugApiOrganizersCategoriesSlugCategorySlugGetError = GetOneBySlugApiOrganizersCategoriesSlugCategorySlugGetErrors[keyof GetOneBySlugApiOrganizersCategoriesSlugCategorySlugGetErrors];

export type GetOneBySlugApiOrganizersCategoriesSlugCategorySlugGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAllApiOrganizersTagsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/organizers/tags';
};

export type GetAllApiOrganizersTagsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiOrganizersTagsGetError = GetAllApiOrganizersTagsGetErrors[keyof GetAllApiOrganizersTagsGetErrors];

export type GetAllApiOrganizersTagsGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeTagPagination;
};

export type GetAllApiOrganizersTagsGetResponse = GetAllApiOrganizersTagsGetResponses[keyof GetAllApiOrganizersTagsGetResponses];

export type CreateOneApiOrganizersTagsPostData = {
    body: TagIn;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/organizers/tags';
};

export type CreateOneApiOrganizersTagsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiOrganizersTagsPostError = CreateOneApiOrganizersTagsPostErrors[keyof CreateOneApiOrganizersTagsPostErrors];

export type CreateOneApiOrganizersTagsPostResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type GetEmptyTagsApiOrganizersTagsEmptyGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/organizers/tags/empty';
};

export type GetEmptyTagsApiOrganizersTagsEmptyGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetEmptyTagsApiOrganizersTagsEmptyGetError = GetEmptyTagsApiOrganizersTagsEmptyGetErrors[keyof GetEmptyTagsApiOrganizersTagsEmptyGetErrors];

export type GetEmptyTagsApiOrganizersTagsEmptyGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DeleteRecipeTagApiOrganizersTagsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/tags/{item_id}';
};

export type DeleteRecipeTagApiOrganizersTagsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteRecipeTagApiOrganizersTagsItemIdDeleteError = DeleteRecipeTagApiOrganizersTagsItemIdDeleteErrors[keyof DeleteRecipeTagApiOrganizersTagsItemIdDeleteErrors];

export type DeleteRecipeTagApiOrganizersTagsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetOneApiOrganizersTagsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/tags/{item_id}';
};

export type GetOneApiOrganizersTagsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiOrganizersTagsItemIdGetError = GetOneApiOrganizersTagsItemIdGetErrors[keyof GetOneApiOrganizersTagsItemIdGetErrors];

export type GetOneApiOrganizersTagsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeTagResponse;
};

export type GetOneApiOrganizersTagsItemIdGetResponse = GetOneApiOrganizersTagsItemIdGetResponses[keyof GetOneApiOrganizersTagsItemIdGetResponses];

export type UpdateOneApiOrganizersTagsItemIdPutData = {
    body: TagIn;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/tags/{item_id}';
};

export type UpdateOneApiOrganizersTagsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiOrganizersTagsItemIdPutError = UpdateOneApiOrganizersTagsItemIdPutErrors[keyof UpdateOneApiOrganizersTagsItemIdPutErrors];

export type UpdateOneApiOrganizersTagsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: RecipeTagResponse;
};

export type UpdateOneApiOrganizersTagsItemIdPutResponse = UpdateOneApiOrganizersTagsItemIdPutResponses[keyof UpdateOneApiOrganizersTagsItemIdPutResponses];

export type GetOneBySlugApiOrganizersTagsSlugTagSlugGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        tag_slug: string;
    };
    query?: never;
    url: '/api/organizers/tags/slug/{tag_slug}';
};

export type GetOneBySlugApiOrganizersTagsSlugTagSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneBySlugApiOrganizersTagsSlugTagSlugGetError = GetOneBySlugApiOrganizersTagsSlugTagSlugGetErrors[keyof GetOneBySlugApiOrganizersTagsSlugTagSlugGetErrors];

export type GetOneBySlugApiOrganizersTagsSlugTagSlugGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeTagResponse;
};

export type GetOneBySlugApiOrganizersTagsSlugTagSlugGetResponse = GetOneBySlugApiOrganizersTagsSlugTagSlugGetResponses[keyof GetOneBySlugApiOrganizersTagsSlugTagSlugGetResponses];

export type GetAllApiOrganizersToolsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/organizers/tools';
};

export type GetAllApiOrganizersToolsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiOrganizersToolsGetError = GetAllApiOrganizersToolsGetErrors[keyof GetAllApiOrganizersToolsGetErrors];

export type GetAllApiOrganizersToolsGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeToolPagination;
};

export type GetAllApiOrganizersToolsGetResponse = GetAllApiOrganizersToolsGetResponses[keyof GetAllApiOrganizersToolsGetResponses];

export type CreateOneApiOrganizersToolsPostData = {
    body: RecipeToolCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/organizers/tools';
};

export type CreateOneApiOrganizersToolsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiOrganizersToolsPostError = CreateOneApiOrganizersToolsPostErrors[keyof CreateOneApiOrganizersToolsPostErrors];

export type CreateOneApiOrganizersToolsPostResponses = {
    /**
     * Successful Response
     */
    201: RecipeTool;
};

export type CreateOneApiOrganizersToolsPostResponse = CreateOneApiOrganizersToolsPostResponses[keyof CreateOneApiOrganizersToolsPostResponses];

export type DeleteOneApiOrganizersToolsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/tools/{item_id}';
};

export type DeleteOneApiOrganizersToolsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiOrganizersToolsItemIdDeleteError = DeleteOneApiOrganizersToolsItemIdDeleteErrors[keyof DeleteOneApiOrganizersToolsItemIdDeleteErrors];

export type DeleteOneApiOrganizersToolsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: RecipeTool;
};

export type DeleteOneApiOrganizersToolsItemIdDeleteResponse = DeleteOneApiOrganizersToolsItemIdDeleteResponses[keyof DeleteOneApiOrganizersToolsItemIdDeleteResponses];

export type GetOneApiOrganizersToolsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/tools/{item_id}';
};

export type GetOneApiOrganizersToolsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiOrganizersToolsItemIdGetError = GetOneApiOrganizersToolsItemIdGetErrors[keyof GetOneApiOrganizersToolsItemIdGetErrors];

export type GetOneApiOrganizersToolsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeTool;
};

export type GetOneApiOrganizersToolsItemIdGetResponse = GetOneApiOrganizersToolsItemIdGetResponses[keyof GetOneApiOrganizersToolsItemIdGetResponses];

export type UpdateOneApiOrganizersToolsItemIdPutData = {
    body: RecipeToolCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/organizers/tools/{item_id}';
};

export type UpdateOneApiOrganizersToolsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiOrganizersToolsItemIdPutError = UpdateOneApiOrganizersToolsItemIdPutErrors[keyof UpdateOneApiOrganizersToolsItemIdPutErrors];

export type UpdateOneApiOrganizersToolsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: RecipeTool;
};

export type UpdateOneApiOrganizersToolsItemIdPutResponse = UpdateOneApiOrganizersToolsItemIdPutResponses[keyof UpdateOneApiOrganizersToolsItemIdPutResponses];

export type GetOneBySlugApiOrganizersToolsSlugToolSlugGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        tool_slug: string;
    };
    query?: never;
    url: '/api/organizers/tools/slug/{tool_slug}';
};

export type GetOneBySlugApiOrganizersToolsSlugToolSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneBySlugApiOrganizersToolsSlugToolSlugGetError = GetOneBySlugApiOrganizersToolsSlugToolSlugGetErrors[keyof GetOneBySlugApiOrganizersToolsSlugToolSlugGetErrors];

export type GetOneBySlugApiOrganizersToolsSlugToolSlugGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeToolResponse;
};

export type GetOneBySlugApiOrganizersToolsSlugToolSlugGetResponse = GetOneBySlugApiOrganizersToolsSlugToolSlugGetResponses[keyof GetOneBySlugApiOrganizersToolsSlugToolSlugGetResponses];

export type GetAllApiSharedRecipesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        recipe_id?: string | null;
    };
    url: '/api/shared/recipes';
};

export type GetAllApiSharedRecipesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiSharedRecipesGetError = GetAllApiSharedRecipesGetErrors[keyof GetAllApiSharedRecipesGetErrors];

export type GetAllApiSharedRecipesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<RecipeShareTokenSummary>;
};

export type GetAllApiSharedRecipesGetResponse = GetAllApiSharedRecipesGetResponses[keyof GetAllApiSharedRecipesGetResponses];

export type CreateOneApiSharedRecipesPostData = {
    body: RecipeShareTokenCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/shared/recipes';
};

export type CreateOneApiSharedRecipesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiSharedRecipesPostError = CreateOneApiSharedRecipesPostErrors[keyof CreateOneApiSharedRecipesPostErrors];

export type CreateOneApiSharedRecipesPostResponses = {
    /**
     * Successful Response
     */
    201: RecipeShareToken;
};

export type CreateOneApiSharedRecipesPostResponse = CreateOneApiSharedRecipesPostResponses[keyof CreateOneApiSharedRecipesPostResponses];

export type DeleteOneApiSharedRecipesItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string | null;
    };
    query?: never;
    url: '/api/shared/recipes/{item_id}';
};

export type DeleteOneApiSharedRecipesItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiSharedRecipesItemIdDeleteError = DeleteOneApiSharedRecipesItemIdDeleteErrors[keyof DeleteOneApiSharedRecipesItemIdDeleteErrors];

export type DeleteOneApiSharedRecipesItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetOneApiSharedRecipesItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/shared/recipes/{item_id}';
};

export type GetOneApiSharedRecipesItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiSharedRecipesItemIdGetError = GetOneApiSharedRecipesItemIdGetErrors[keyof GetOneApiSharedRecipesItemIdGetErrors];

export type GetOneApiSharedRecipesItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeShareToken;
};

export type GetOneApiSharedRecipesItemIdGetResponse = GetOneApiSharedRecipesItemIdGetResponses[keyof GetOneApiSharedRecipesItemIdGetResponses];

export type GetAllApiCommentsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/comments';
};

export type GetAllApiCommentsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiCommentsGetError = GetAllApiCommentsGetErrors[keyof GetAllApiCommentsGetErrors];

export type GetAllApiCommentsGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeCommentPagination;
};

export type GetAllApiCommentsGetResponse = GetAllApiCommentsGetResponses[keyof GetAllApiCommentsGetResponses];

export type CreateOneApiCommentsPostData = {
    body: RecipeCommentCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/comments';
};

export type CreateOneApiCommentsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiCommentsPostError = CreateOneApiCommentsPostErrors[keyof CreateOneApiCommentsPostErrors];

export type CreateOneApiCommentsPostResponses = {
    /**
     * Successful Response
     */
    201: RecipeCommentOutOutput;
};

export type CreateOneApiCommentsPostResponse = CreateOneApiCommentsPostResponses[keyof CreateOneApiCommentsPostResponses];

export type DeleteOneApiCommentsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/comments/{item_id}';
};

export type DeleteOneApiCommentsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiCommentsItemIdDeleteError = DeleteOneApiCommentsItemIdDeleteErrors[keyof DeleteOneApiCommentsItemIdDeleteErrors];

export type DeleteOneApiCommentsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type DeleteOneApiCommentsItemIdDeleteResponse = DeleteOneApiCommentsItemIdDeleteResponses[keyof DeleteOneApiCommentsItemIdDeleteResponses];

export type GetOneApiCommentsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/comments/{item_id}';
};

export type GetOneApiCommentsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiCommentsItemIdGetError = GetOneApiCommentsItemIdGetErrors[keyof GetOneApiCommentsItemIdGetErrors];

export type GetOneApiCommentsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeCommentOutOutput;
};

export type GetOneApiCommentsItemIdGetResponse = GetOneApiCommentsItemIdGetResponses[keyof GetOneApiCommentsItemIdGetResponses];

export type UpdateOneApiCommentsItemIdPutData = {
    body: RecipeCommentUpdate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/comments/{item_id}';
};

export type UpdateOneApiCommentsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiCommentsItemIdPutError = UpdateOneApiCommentsItemIdPutErrors[keyof UpdateOneApiCommentsItemIdPutErrors];

export type UpdateOneApiCommentsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: RecipeCommentOutOutput;
};

export type UpdateOneApiCommentsItemIdPutResponse = UpdateOneApiCommentsItemIdPutResponses[keyof UpdateOneApiCommentsItemIdPutResponses];

export type ParseIngredientApiParserIngredientPostData = {
    body: IngredientRequest;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/parser/ingredient';
};

export type ParseIngredientApiParserIngredientPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ParseIngredientApiParserIngredientPostError = ParseIngredientApiParserIngredientPostErrors[keyof ParseIngredientApiParserIngredientPostErrors];

export type ParseIngredientApiParserIngredientPostResponses = {
    /**
     * Successful Response
     */
    200: ParsedIngredient;
};

export type ParseIngredientApiParserIngredientPostResponse = ParseIngredientApiParserIngredientPostResponses[keyof ParseIngredientApiParserIngredientPostResponses];

export type ParseIngredientsApiParserIngredientsPostData = {
    body: IngredientsRequest;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/parser/ingredients';
};

export type ParseIngredientsApiParserIngredientsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ParseIngredientsApiParserIngredientsPostError = ParseIngredientsApiParserIngredientsPostErrors[keyof ParseIngredientsApiParserIngredientsPostErrors];

export type ParseIngredientsApiParserIngredientsPostResponses = {
    /**
     * Successful Response
     */
    200: Array<ParsedIngredient>;
};

export type ParseIngredientsApiParserIngredientsPostResponse = ParseIngredientsApiParserIngredientsPostResponses[keyof ParseIngredientsApiParserIngredientsPostResponses];

export type GetAllApiFoodsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/foods';
};

export type GetAllApiFoodsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiFoodsGetError = GetAllApiFoodsGetErrors[keyof GetAllApiFoodsGetErrors];

export type GetAllApiFoodsGetResponses = {
    /**
     * Successful Response
     */
    200: IngredientFoodPagination;
};

export type GetAllApiFoodsGetResponse = GetAllApiFoodsGetResponses[keyof GetAllApiFoodsGetResponses];

export type CreateOneApiFoodsPostData = {
    body: CreateIngredientFood;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/foods';
};

export type CreateOneApiFoodsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiFoodsPostError = CreateOneApiFoodsPostErrors[keyof CreateOneApiFoodsPostErrors];

export type CreateOneApiFoodsPostResponses = {
    /**
     * Successful Response
     */
    201: IngredientFoodOutput;
};

export type CreateOneApiFoodsPostResponse = CreateOneApiFoodsPostResponses[keyof CreateOneApiFoodsPostResponses];

export type MergeOneApiFoodsMergePutData = {
    body: MergeFood;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/foods/merge';
};

export type MergeOneApiFoodsMergePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MergeOneApiFoodsMergePutError = MergeOneApiFoodsMergePutErrors[keyof MergeOneApiFoodsMergePutErrors];

export type MergeOneApiFoodsMergePutResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type MergeOneApiFoodsMergePutResponse = MergeOneApiFoodsMergePutResponses[keyof MergeOneApiFoodsMergePutResponses];

export type DeleteOneApiFoodsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/foods/{item_id}';
};

export type DeleteOneApiFoodsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiFoodsItemIdDeleteError = DeleteOneApiFoodsItemIdDeleteErrors[keyof DeleteOneApiFoodsItemIdDeleteErrors];

export type DeleteOneApiFoodsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: IngredientFoodOutput;
};

export type DeleteOneApiFoodsItemIdDeleteResponse = DeleteOneApiFoodsItemIdDeleteResponses[keyof DeleteOneApiFoodsItemIdDeleteResponses];

export type GetOneApiFoodsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/foods/{item_id}';
};

export type GetOneApiFoodsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiFoodsItemIdGetError = GetOneApiFoodsItemIdGetErrors[keyof GetOneApiFoodsItemIdGetErrors];

export type GetOneApiFoodsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: IngredientFoodOutput;
};

export type GetOneApiFoodsItemIdGetResponse = GetOneApiFoodsItemIdGetResponses[keyof GetOneApiFoodsItemIdGetResponses];

export type UpdateOneApiFoodsItemIdPutData = {
    body: CreateIngredientFood;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/foods/{item_id}';
};

export type UpdateOneApiFoodsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiFoodsItemIdPutError = UpdateOneApiFoodsItemIdPutErrors[keyof UpdateOneApiFoodsItemIdPutErrors];

export type UpdateOneApiFoodsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: IngredientFoodOutput;
};

export type UpdateOneApiFoodsItemIdPutResponse = UpdateOneApiFoodsItemIdPutResponses[keyof UpdateOneApiFoodsItemIdPutResponses];

export type GetAllApiUnitsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/units';
};

export type GetAllApiUnitsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiUnitsGetError = GetAllApiUnitsGetErrors[keyof GetAllApiUnitsGetErrors];

export type GetAllApiUnitsGetResponses = {
    /**
     * Successful Response
     */
    200: IngredientUnitPagination;
};

export type GetAllApiUnitsGetResponse = GetAllApiUnitsGetResponses[keyof GetAllApiUnitsGetResponses];

export type CreateOneApiUnitsPostData = {
    body: CreateIngredientUnit;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/units';
};

export type CreateOneApiUnitsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiUnitsPostError = CreateOneApiUnitsPostErrors[keyof CreateOneApiUnitsPostErrors];

export type CreateOneApiUnitsPostResponses = {
    /**
     * Successful Response
     */
    201: IngredientUnitOutput;
};

export type CreateOneApiUnitsPostResponse = CreateOneApiUnitsPostResponses[keyof CreateOneApiUnitsPostResponses];

export type MergeOneApiUnitsMergePutData = {
    body: MergeUnit;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/units/merge';
};

export type MergeOneApiUnitsMergePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MergeOneApiUnitsMergePutError = MergeOneApiUnitsMergePutErrors[keyof MergeOneApiUnitsMergePutErrors];

export type MergeOneApiUnitsMergePutResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type MergeOneApiUnitsMergePutResponse = MergeOneApiUnitsMergePutResponses[keyof MergeOneApiUnitsMergePutResponses];

export type DeleteOneApiUnitsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/units/{item_id}';
};

export type DeleteOneApiUnitsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiUnitsItemIdDeleteError = DeleteOneApiUnitsItemIdDeleteErrors[keyof DeleteOneApiUnitsItemIdDeleteErrors];

export type DeleteOneApiUnitsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: IngredientUnitOutput;
};

export type DeleteOneApiUnitsItemIdDeleteResponse = DeleteOneApiUnitsItemIdDeleteResponses[keyof DeleteOneApiUnitsItemIdDeleteResponses];

export type GetOneApiUnitsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/units/{item_id}';
};

export type GetOneApiUnitsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiUnitsItemIdGetError = GetOneApiUnitsItemIdGetErrors[keyof GetOneApiUnitsItemIdGetErrors];

export type GetOneApiUnitsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: IngredientUnitOutput;
};

export type GetOneApiUnitsItemIdGetResponse = GetOneApiUnitsItemIdGetResponses[keyof GetOneApiUnitsItemIdGetResponses];

export type UpdateOneApiUnitsItemIdPutData = {
    body: CreateIngredientUnit;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/units/{item_id}';
};

export type UpdateOneApiUnitsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiUnitsItemIdPutError = UpdateOneApiUnitsItemIdPutErrors[keyof UpdateOneApiUnitsItemIdPutErrors];

export type UpdateOneApiUnitsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: IngredientUnitOutput;
};

export type UpdateOneApiUnitsItemIdPutResponse = UpdateOneApiUnitsItemIdPutResponses[keyof UpdateOneApiUnitsItemIdPutResponses];

export type GetAppInfoApiAdminAboutGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/about';
};

export type GetAppInfoApiAdminAboutGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAppInfoApiAdminAboutGetError = GetAppInfoApiAdminAboutGetErrors[keyof GetAppInfoApiAdminAboutGetErrors];

export type GetAppInfoApiAdminAboutGetResponses = {
    /**
     * Successful Response
     */
    200: AdminAboutInfo;
};

export type GetAppInfoApiAdminAboutGetResponse = GetAppInfoApiAdminAboutGetResponses[keyof GetAppInfoApiAdminAboutGetResponses];

export type GetAppStatisticsApiAdminAboutStatisticsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/about/statistics';
};

export type GetAppStatisticsApiAdminAboutStatisticsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAppStatisticsApiAdminAboutStatisticsGetError = GetAppStatisticsApiAdminAboutStatisticsGetErrors[keyof GetAppStatisticsApiAdminAboutStatisticsGetErrors];

export type GetAppStatisticsApiAdminAboutStatisticsGetResponses = {
    /**
     * Successful Response
     */
    200: AppStatistics;
};

export type GetAppStatisticsApiAdminAboutStatisticsGetResponse = GetAppStatisticsApiAdminAboutStatisticsGetResponses[keyof GetAppStatisticsApiAdminAboutStatisticsGetResponses];

export type CheckAppConfigApiAdminAboutCheckGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/about/check';
};

export type CheckAppConfigApiAdminAboutCheckGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CheckAppConfigApiAdminAboutCheckGetError = CheckAppConfigApiAdminAboutCheckGetErrors[keyof CheckAppConfigApiAdminAboutCheckGetErrors];

export type CheckAppConfigApiAdminAboutCheckGetResponses = {
    /**
     * Successful Response
     */
    200: CheckAppConfig;
};

export type CheckAppConfigApiAdminAboutCheckGetResponse = CheckAppConfigApiAdminAboutCheckGetResponses[keyof CheckAppConfigApiAdminAboutCheckGetResponses];

export type GetAllApiAdminUsersGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/admin/users';
};

export type GetAllApiAdminUsersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiAdminUsersGetError = GetAllApiAdminUsersGetErrors[keyof GetAllApiAdminUsersGetErrors];

export type GetAllApiAdminUsersGetResponses = {
    /**
     * Successful Response
     */
    200: UserPagination;
};

export type GetAllApiAdminUsersGetResponse = GetAllApiAdminUsersGetResponses[keyof GetAllApiAdminUsersGetResponses];

export type CreateOneApiAdminUsersPostData = {
    body: UserIn;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/users';
};

export type CreateOneApiAdminUsersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiAdminUsersPostError = CreateOneApiAdminUsersPostErrors[keyof CreateOneApiAdminUsersPostErrors];

export type CreateOneApiAdminUsersPostResponses = {
    /**
     * Successful Response
     */
    201: UserOut;
};

export type CreateOneApiAdminUsersPostResponse = CreateOneApiAdminUsersPostResponses[keyof CreateOneApiAdminUsersPostResponses];

export type UnlockUsersApiAdminUsersUnlockPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        force?: boolean;
    };
    url: '/api/admin/users/unlock';
};

export type UnlockUsersApiAdminUsersUnlockPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UnlockUsersApiAdminUsersUnlockPostError = UnlockUsersApiAdminUsersUnlockPostErrors[keyof UnlockUsersApiAdminUsersUnlockPostErrors];

export type UnlockUsersApiAdminUsersUnlockPostResponses = {
    /**
     * Successful Response
     */
    200: UnlockResults;
};

export type UnlockUsersApiAdminUsersUnlockPostResponse = UnlockUsersApiAdminUsersUnlockPostResponses[keyof UnlockUsersApiAdminUsersUnlockPostResponses];

export type DeleteOneApiAdminUsersItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/users/{item_id}';
};

export type DeleteOneApiAdminUsersItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiAdminUsersItemIdDeleteError = DeleteOneApiAdminUsersItemIdDeleteErrors[keyof DeleteOneApiAdminUsersItemIdDeleteErrors];

export type DeleteOneApiAdminUsersItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type DeleteOneApiAdminUsersItemIdDeleteResponse = DeleteOneApiAdminUsersItemIdDeleteResponses[keyof DeleteOneApiAdminUsersItemIdDeleteResponses];

export type GetOneApiAdminUsersItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/users/{item_id}';
};

export type GetOneApiAdminUsersItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiAdminUsersItemIdGetError = GetOneApiAdminUsersItemIdGetErrors[keyof GetOneApiAdminUsersItemIdGetErrors];

export type GetOneApiAdminUsersItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type GetOneApiAdminUsersItemIdGetResponse = GetOneApiAdminUsersItemIdGetResponses[keyof GetOneApiAdminUsersItemIdGetResponses];

export type UpdateOneApiAdminUsersItemIdPutData = {
    body: UserOut;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/users/{item_id}';
};

export type UpdateOneApiAdminUsersItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiAdminUsersItemIdPutError = UpdateOneApiAdminUsersItemIdPutErrors[keyof UpdateOneApiAdminUsersItemIdPutErrors];

export type UpdateOneApiAdminUsersItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: UserOut;
};

export type UpdateOneApiAdminUsersItemIdPutResponse = UpdateOneApiAdminUsersItemIdPutResponses[keyof UpdateOneApiAdminUsersItemIdPutResponses];

export type GenerateTokenApiAdminUsersPasswordResetTokenPostData = {
    body: ForgotPassword;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/users/password-reset-token';
};

export type GenerateTokenApiAdminUsersPasswordResetTokenPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GenerateTokenApiAdminUsersPasswordResetTokenPostError = GenerateTokenApiAdminUsersPasswordResetTokenPostErrors[keyof GenerateTokenApiAdminUsersPasswordResetTokenPostErrors];

export type GenerateTokenApiAdminUsersPasswordResetTokenPostResponses = {
    /**
     * Successful Response
     */
    201: PasswordResetToken;
};

export type GenerateTokenApiAdminUsersPasswordResetTokenPostResponse = GenerateTokenApiAdminUsersPasswordResetTokenPostResponses[keyof GenerateTokenApiAdminUsersPasswordResetTokenPostResponses];

export type GetAllApiAdminHouseholdsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/admin/households';
};

export type GetAllApiAdminHouseholdsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiAdminHouseholdsGetError = GetAllApiAdminHouseholdsGetErrors[keyof GetAllApiAdminHouseholdsGetErrors];

export type GetAllApiAdminHouseholdsGetResponses = {
    /**
     * Successful Response
     */
    200: HouseholdPagination;
};

export type GetAllApiAdminHouseholdsGetResponse = GetAllApiAdminHouseholdsGetResponses[keyof GetAllApiAdminHouseholdsGetResponses];

export type CreateOneApiAdminHouseholdsPostData = {
    body: HouseholdCreate;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/households';
};

export type CreateOneApiAdminHouseholdsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiAdminHouseholdsPostError = CreateOneApiAdminHouseholdsPostErrors[keyof CreateOneApiAdminHouseholdsPostErrors];

export type CreateOneApiAdminHouseholdsPostResponses = {
    /**
     * Successful Response
     */
    201: HouseholdInDb;
};

export type CreateOneApiAdminHouseholdsPostResponse = CreateOneApiAdminHouseholdsPostResponses[keyof CreateOneApiAdminHouseholdsPostResponses];

export type DeleteOneApiAdminHouseholdsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/households/{item_id}';
};

export type DeleteOneApiAdminHouseholdsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiAdminHouseholdsItemIdDeleteError = DeleteOneApiAdminHouseholdsItemIdDeleteErrors[keyof DeleteOneApiAdminHouseholdsItemIdDeleteErrors];

export type DeleteOneApiAdminHouseholdsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: HouseholdInDb;
};

export type DeleteOneApiAdminHouseholdsItemIdDeleteResponse = DeleteOneApiAdminHouseholdsItemIdDeleteResponses[keyof DeleteOneApiAdminHouseholdsItemIdDeleteResponses];

export type GetOneApiAdminHouseholdsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/households/{item_id}';
};

export type GetOneApiAdminHouseholdsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiAdminHouseholdsItemIdGetError = GetOneApiAdminHouseholdsItemIdGetErrors[keyof GetOneApiAdminHouseholdsItemIdGetErrors];

export type GetOneApiAdminHouseholdsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: HouseholdInDb;
};

export type GetOneApiAdminHouseholdsItemIdGetResponse = GetOneApiAdminHouseholdsItemIdGetResponses[keyof GetOneApiAdminHouseholdsItemIdGetResponses];

export type UpdateOneApiAdminHouseholdsItemIdPutData = {
    body: UpdateHouseholdAdmin;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/households/{item_id}';
};

export type UpdateOneApiAdminHouseholdsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiAdminHouseholdsItemIdPutError = UpdateOneApiAdminHouseholdsItemIdPutErrors[keyof UpdateOneApiAdminHouseholdsItemIdPutErrors];

export type UpdateOneApiAdminHouseholdsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: HouseholdInDb;
};

export type UpdateOneApiAdminHouseholdsItemIdPutResponse = UpdateOneApiAdminHouseholdsItemIdPutResponses[keyof UpdateOneApiAdminHouseholdsItemIdPutResponses];

export type GetAllApiAdminGroupsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/admin/groups';
};

export type GetAllApiAdminGroupsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiAdminGroupsGetError = GetAllApiAdminGroupsGetErrors[keyof GetAllApiAdminGroupsGetErrors];

export type GetAllApiAdminGroupsGetResponses = {
    /**
     * Successful Response
     */
    200: GroupPagination;
};

export type GetAllApiAdminGroupsGetResponse = GetAllApiAdminGroupsGetResponses[keyof GetAllApiAdminGroupsGetResponses];

export type CreateOneApiAdminGroupsPostData = {
    body: GroupBase;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/groups';
};

export type CreateOneApiAdminGroupsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiAdminGroupsPostError = CreateOneApiAdminGroupsPostErrors[keyof CreateOneApiAdminGroupsPostErrors];

export type CreateOneApiAdminGroupsPostResponses = {
    /**
     * Successful Response
     */
    201: GroupInDb;
};

export type CreateOneApiAdminGroupsPostResponse = CreateOneApiAdminGroupsPostResponses[keyof CreateOneApiAdminGroupsPostResponses];

export type DeleteOneApiAdminGroupsItemIdDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/groups/{item_id}';
};

export type DeleteOneApiAdminGroupsItemIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiAdminGroupsItemIdDeleteError = DeleteOneApiAdminGroupsItemIdDeleteErrors[keyof DeleteOneApiAdminGroupsItemIdDeleteErrors];

export type DeleteOneApiAdminGroupsItemIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: GroupInDb;
};

export type DeleteOneApiAdminGroupsItemIdDeleteResponse = DeleteOneApiAdminGroupsItemIdDeleteResponses[keyof DeleteOneApiAdminGroupsItemIdDeleteResponses];

export type GetOneApiAdminGroupsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/groups/{item_id}';
};

export type GetOneApiAdminGroupsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiAdminGroupsItemIdGetError = GetOneApiAdminGroupsItemIdGetErrors[keyof GetOneApiAdminGroupsItemIdGetErrors];

export type GetOneApiAdminGroupsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: GroupInDb;
};

export type GetOneApiAdminGroupsItemIdGetResponse = GetOneApiAdminGroupsItemIdGetResponses[keyof GetOneApiAdminGroupsItemIdGetResponses];

export type UpdateOneApiAdminGroupsItemIdPutData = {
    body: GroupAdminUpdate;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
    };
    query?: never;
    url: '/api/admin/groups/{item_id}';
};

export type UpdateOneApiAdminGroupsItemIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateOneApiAdminGroupsItemIdPutError = UpdateOneApiAdminGroupsItemIdPutErrors[keyof UpdateOneApiAdminGroupsItemIdPutErrors];

export type UpdateOneApiAdminGroupsItemIdPutResponses = {
    /**
     * Successful Response
     */
    200: GroupInDb;
};

export type UpdateOneApiAdminGroupsItemIdPutResponse = UpdateOneApiAdminGroupsItemIdPutResponses[keyof UpdateOneApiAdminGroupsItemIdPutResponses];

export type CheckEmailConfigApiAdminEmailGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/email';
};

export type CheckEmailConfigApiAdminEmailGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CheckEmailConfigApiAdminEmailGetError = CheckEmailConfigApiAdminEmailGetErrors[keyof CheckEmailConfigApiAdminEmailGetErrors];

export type CheckEmailConfigApiAdminEmailGetResponses = {
    /**
     * Successful Response
     */
    200: EmailReady;
};

export type CheckEmailConfigApiAdminEmailGetResponse = CheckEmailConfigApiAdminEmailGetResponses[keyof CheckEmailConfigApiAdminEmailGetResponses];

export type SendTestEmailApiAdminEmailPostData = {
    body: EmailTest;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/email';
};

export type SendTestEmailApiAdminEmailPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SendTestEmailApiAdminEmailPostError = SendTestEmailApiAdminEmailPostErrors[keyof SendTestEmailApiAdminEmailPostErrors];

export type SendTestEmailApiAdminEmailPostResponses = {
    /**
     * Successful Response
     */
    200: EmailSuccess;
};

export type SendTestEmailApiAdminEmailPostResponse = SendTestEmailApiAdminEmailPostResponses[keyof SendTestEmailApiAdminEmailPostResponses];

export type GetAllApiAdminBackupsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/backups';
};

export type GetAllApiAdminBackupsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiAdminBackupsGetError = GetAllApiAdminBackupsGetErrors[keyof GetAllApiAdminBackupsGetErrors];

export type GetAllApiAdminBackupsGetResponses = {
    /**
     * Successful Response
     */
    200: AllBackups;
};

export type GetAllApiAdminBackupsGetResponse = GetAllApiAdminBackupsGetResponses[keyof GetAllApiAdminBackupsGetResponses];

export type CreateOneApiAdminBackupsPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/backups';
};

export type CreateOneApiAdminBackupsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOneApiAdminBackupsPostError = CreateOneApiAdminBackupsPostErrors[keyof CreateOneApiAdminBackupsPostErrors];

export type CreateOneApiAdminBackupsPostResponses = {
    /**
     * Successful Response
     */
    201: SuccessResponse;
};

export type CreateOneApiAdminBackupsPostResponse = CreateOneApiAdminBackupsPostResponses[keyof CreateOneApiAdminBackupsPostResponses];

export type DeleteOneApiAdminBackupsFileNameDeleteData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        file_name: string;
    };
    query?: never;
    url: '/api/admin/backups/{file_name}';
};

export type DeleteOneApiAdminBackupsFileNameDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteOneApiAdminBackupsFileNameDeleteError = DeleteOneApiAdminBackupsFileNameDeleteErrors[keyof DeleteOneApiAdminBackupsFileNameDeleteErrors];

export type DeleteOneApiAdminBackupsFileNameDeleteResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type DeleteOneApiAdminBackupsFileNameDeleteResponse = DeleteOneApiAdminBackupsFileNameDeleteResponses[keyof DeleteOneApiAdminBackupsFileNameDeleteResponses];

export type GetOneApiAdminBackupsFileNameGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        file_name: string;
    };
    query?: never;
    url: '/api/admin/backups/{file_name}';
};

export type GetOneApiAdminBackupsFileNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiAdminBackupsFileNameGetError = GetOneApiAdminBackupsFileNameGetErrors[keyof GetOneApiAdminBackupsFileNameGetErrors];

export type GetOneApiAdminBackupsFileNameGetResponses = {
    /**
     * Successful Response
     */
    200: FileTokenResponse;
};

export type GetOneApiAdminBackupsFileNameGetResponse = GetOneApiAdminBackupsFileNameGetResponses[keyof GetOneApiAdminBackupsFileNameGetResponses];

export type UploadOneApiAdminBackupsUploadPostData = {
    body: BodyUploadOneApiAdminBackupsUploadPost;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/backups/upload';
};

export type UploadOneApiAdminBackupsUploadPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadOneApiAdminBackupsUploadPostError = UploadOneApiAdminBackupsUploadPostErrors[keyof UploadOneApiAdminBackupsUploadPostErrors];

export type UploadOneApiAdminBackupsUploadPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type UploadOneApiAdminBackupsUploadPostResponse = UploadOneApiAdminBackupsUploadPostResponses[keyof UploadOneApiAdminBackupsUploadPostResponses];

export type ImportOneApiAdminBackupsFileNameRestorePostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        file_name: string;
    };
    query?: never;
    url: '/api/admin/backups/{file_name}/restore';
};

export type ImportOneApiAdminBackupsFileNameRestorePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ImportOneApiAdminBackupsFileNameRestorePostError = ImportOneApiAdminBackupsFileNameRestorePostErrors[keyof ImportOneApiAdminBackupsFileNameRestorePostErrors];

export type ImportOneApiAdminBackupsFileNameRestorePostResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type ImportOneApiAdminBackupsFileNameRestorePostResponse = ImportOneApiAdminBackupsFileNameRestorePostResponses[keyof ImportOneApiAdminBackupsFileNameRestorePostResponses];

export type GetMaintenanceSummaryApiAdminMaintenanceGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/maintenance';
};

export type GetMaintenanceSummaryApiAdminMaintenanceGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMaintenanceSummaryApiAdminMaintenanceGetError = GetMaintenanceSummaryApiAdminMaintenanceGetErrors[keyof GetMaintenanceSummaryApiAdminMaintenanceGetErrors];

export type GetMaintenanceSummaryApiAdminMaintenanceGetResponses = {
    /**
     * Successful Response
     */
    200: MaintenanceSummary;
};

export type GetMaintenanceSummaryApiAdminMaintenanceGetResponse = GetMaintenanceSummaryApiAdminMaintenanceGetResponses[keyof GetMaintenanceSummaryApiAdminMaintenanceGetResponses];

export type GetStorageDetailsApiAdminMaintenanceStorageGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/maintenance/storage';
};

export type GetStorageDetailsApiAdminMaintenanceStorageGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStorageDetailsApiAdminMaintenanceStorageGetError = GetStorageDetailsApiAdminMaintenanceStorageGetErrors[keyof GetStorageDetailsApiAdminMaintenanceStorageGetErrors];

export type GetStorageDetailsApiAdminMaintenanceStorageGetResponses = {
    /**
     * Successful Response
     */
    200: MaintenanceStorageDetails;
};

export type GetStorageDetailsApiAdminMaintenanceStorageGetResponse = GetStorageDetailsApiAdminMaintenanceStorageGetResponses[keyof GetStorageDetailsApiAdminMaintenanceStorageGetResponses];

export type CleanImagesApiAdminMaintenanceCleanImagesPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/maintenance/clean/images';
};

export type CleanImagesApiAdminMaintenanceCleanImagesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CleanImagesApiAdminMaintenanceCleanImagesPostError = CleanImagesApiAdminMaintenanceCleanImagesPostErrors[keyof CleanImagesApiAdminMaintenanceCleanImagesPostErrors];

export type CleanImagesApiAdminMaintenanceCleanImagesPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type CleanImagesApiAdminMaintenanceCleanImagesPostResponse = CleanImagesApiAdminMaintenanceCleanImagesPostResponses[keyof CleanImagesApiAdminMaintenanceCleanImagesPostResponses];

export type CleanTempApiAdminMaintenanceCleanTempPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/maintenance/clean/temp';
};

export type CleanTempApiAdminMaintenanceCleanTempPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CleanTempApiAdminMaintenanceCleanTempPostError = CleanTempApiAdminMaintenanceCleanTempPostErrors[keyof CleanTempApiAdminMaintenanceCleanTempPostErrors];

export type CleanTempApiAdminMaintenanceCleanTempPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type CleanTempApiAdminMaintenanceCleanTempPostResponse = CleanTempApiAdminMaintenanceCleanTempPostResponses[keyof CleanTempApiAdminMaintenanceCleanTempPostResponses];

export type CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/maintenance/clean/recipe-folders';
};

export type CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostError = CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostErrors[keyof CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostErrors];

export type CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessResponse;
};

export type CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostResponse = CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostResponses[keyof CleanRecipeFoldersApiAdminMaintenanceCleanRecipeFoldersPostResponses];

export type DebugOpenaiApiAdminDebugOpenaiPostData = {
    body?: BodyDebugOpenaiApiAdminDebugOpenaiPost;
    headers?: {
        'accept-language'?: string | null;
    };
    path?: never;
    query?: never;
    url: '/api/admin/debug/openai';
};

export type DebugOpenaiApiAdminDebugOpenaiPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DebugOpenaiApiAdminDebugOpenaiPostError = DebugOpenaiApiAdminDebugOpenaiPostErrors[keyof DebugOpenaiApiAdminDebugOpenaiPostErrors];

export type DebugOpenaiApiAdminDebugOpenaiPostResponses = {
    /**
     * Successful Response
     */
    200: DebugResponse;
};

export type DebugOpenaiApiAdminDebugOpenaiPostResponse = DebugOpenaiApiAdminDebugOpenaiPostResponses[keyof DebugOpenaiApiAdminDebugOpenaiPostResponses];

export type GetAllApiExploreGroupsGroupSlugFoodsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        group_slug: string;
    };
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/explore/groups/{group_slug}/foods';
};

export type GetAllApiExploreGroupsGroupSlugFoodsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiExploreGroupsGroupSlugFoodsGetError = GetAllApiExploreGroupsGroupSlugFoodsGetErrors[keyof GetAllApiExploreGroupsGroupSlugFoodsGetErrors];

export type GetAllApiExploreGroupsGroupSlugFoodsGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseIngredientFood;
};

export type GetAllApiExploreGroupsGroupSlugFoodsGetResponse = GetAllApiExploreGroupsGroupSlugFoodsGetResponses[keyof GetAllApiExploreGroupsGroupSlugFoodsGetResponses];

export type GetOneApiExploreGroupsGroupSlugFoodsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
        group_slug: string;
    };
    query?: never;
    url: '/api/explore/groups/{group_slug}/foods/{item_id}';
};

export type GetOneApiExploreGroupsGroupSlugFoodsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiExploreGroupsGroupSlugFoodsItemIdGetError = GetOneApiExploreGroupsGroupSlugFoodsItemIdGetErrors[keyof GetOneApiExploreGroupsGroupSlugFoodsItemIdGetErrors];

export type GetOneApiExploreGroupsGroupSlugFoodsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: IngredientFoodOutput;
};

export type GetOneApiExploreGroupsGroupSlugFoodsItemIdGetResponse = GetOneApiExploreGroupsGroupSlugFoodsItemIdGetResponses[keyof GetOneApiExploreGroupsGroupSlugFoodsItemIdGetResponses];

export type GetAllApiExploreGroupsGroupSlugHouseholdsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        group_slug: string;
    };
    query?: {
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/explore/groups/{group_slug}/households';
};

export type GetAllApiExploreGroupsGroupSlugHouseholdsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiExploreGroupsGroupSlugHouseholdsGetError = GetAllApiExploreGroupsGroupSlugHouseholdsGetErrors[keyof GetAllApiExploreGroupsGroupSlugHouseholdsGetErrors];

export type GetAllApiExploreGroupsGroupSlugHouseholdsGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseHouseholdSummary;
};

export type GetAllApiExploreGroupsGroupSlugHouseholdsGetResponse = GetAllApiExploreGroupsGroupSlugHouseholdsGetResponses[keyof GetAllApiExploreGroupsGroupSlugHouseholdsGetResponses];

export type GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        household_slug: string;
        group_slug: string;
    };
    query?: never;
    url: '/api/explore/groups/{group_slug}/households/{household_slug}';
};

export type GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetError = GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetErrors[keyof GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetErrors];

export type GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetResponses = {
    /**
     * Successful Response
     */
    200: HouseholdSummary;
};

export type GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetResponse = GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetResponses[keyof GetHouseholdApiExploreGroupsGroupSlugHouseholdsHouseholdSlugGetResponses];

export type GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        group_slug: string;
    };
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/explore/groups/{group_slug}/organizers/categories';
};

export type GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetError = GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetErrors[keyof GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetErrors];

export type GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseRecipeCategory;
};

export type GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetResponse = GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetResponses[keyof GetAllApiExploreGroupsGroupSlugOrganizersCategoriesGetResponses];

export type GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
        group_slug: string;
    };
    query?: never;
    url: '/api/explore/groups/{group_slug}/organizers/categories/{item_id}';
};

export type GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetError = GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetErrors[keyof GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetErrors];

export type GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: CategoryOut;
};

export type GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetResponse = GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetResponses[keyof GetOneApiExploreGroupsGroupSlugOrganizersCategoriesItemIdGetResponses];

export type GetAllApiExploreGroupsGroupSlugOrganizersTagsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        group_slug: string;
    };
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/explore/groups/{group_slug}/organizers/tags';
};

export type GetAllApiExploreGroupsGroupSlugOrganizersTagsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiExploreGroupsGroupSlugOrganizersTagsGetError = GetAllApiExploreGroupsGroupSlugOrganizersTagsGetErrors[keyof GetAllApiExploreGroupsGroupSlugOrganizersTagsGetErrors];

export type GetAllApiExploreGroupsGroupSlugOrganizersTagsGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseRecipeTag;
};

export type GetAllApiExploreGroupsGroupSlugOrganizersTagsGetResponse = GetAllApiExploreGroupsGroupSlugOrganizersTagsGetResponses[keyof GetAllApiExploreGroupsGroupSlugOrganizersTagsGetResponses];

export type GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
        group_slug: string;
    };
    query?: never;
    url: '/api/explore/groups/{group_slug}/organizers/tags/{item_id}';
};

export type GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetError = GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetErrors[keyof GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetErrors];

export type GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: TagOut;
};

export type GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetResponse = GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetResponses[keyof GetOneApiExploreGroupsGroupSlugOrganizersTagsItemIdGetResponses];

export type GetAllApiExploreGroupsGroupSlugOrganizersToolsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        group_slug: string;
    };
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/explore/groups/{group_slug}/organizers/tools';
};

export type GetAllApiExploreGroupsGroupSlugOrganizersToolsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiExploreGroupsGroupSlugOrganizersToolsGetError = GetAllApiExploreGroupsGroupSlugOrganizersToolsGetErrors[keyof GetAllApiExploreGroupsGroupSlugOrganizersToolsGetErrors];

export type GetAllApiExploreGroupsGroupSlugOrganizersToolsGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseRecipeTool;
};

export type GetAllApiExploreGroupsGroupSlugOrganizersToolsGetResponse = GetAllApiExploreGroupsGroupSlugOrganizersToolsGetResponses[keyof GetAllApiExploreGroupsGroupSlugOrganizersToolsGetResponses];

export type GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
        group_slug: string;
    };
    query?: never;
    url: '/api/explore/groups/{group_slug}/organizers/tools/{item_id}';
};

export type GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetError = GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetErrors[keyof GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetErrors];

export type GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeToolOut;
};

export type GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetResponse = GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetResponses[keyof GetOneApiExploreGroupsGroupSlugOrganizersToolsItemIdGetResponses];

export type GetAllApiExploreGroupsGroupSlugCookbooksGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        group_slug: string;
    };
    query?: {
        search?: string | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
    };
    url: '/api/explore/groups/{group_slug}/cookbooks';
};

export type GetAllApiExploreGroupsGroupSlugCookbooksGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiExploreGroupsGroupSlugCookbooksGetError = GetAllApiExploreGroupsGroupSlugCookbooksGetErrors[keyof GetAllApiExploreGroupsGroupSlugCookbooksGetErrors];

export type GetAllApiExploreGroupsGroupSlugCookbooksGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseReadCookBook;
};

export type GetAllApiExploreGroupsGroupSlugCookbooksGetResponse = GetAllApiExploreGroupsGroupSlugCookbooksGetResponses[keyof GetAllApiExploreGroupsGroupSlugCookbooksGetResponses];

export type GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        item_id: string;
        group_slug: string;
    };
    query?: never;
    url: '/api/explore/groups/{group_slug}/cookbooks/{item_id}';
};

export type GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetError = GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetErrors[keyof GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetErrors];

export type GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeCookBook;
};

export type GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetResponse = GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetResponses[keyof GetOneApiExploreGroupsGroupSlugCookbooksItemIdGetResponses];

export type GetAllApiExploreGroupsGroupSlugRecipesGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        group_slug: string;
    };
    query?: {
        categories?: Array<string> | null;
        tags?: Array<string> | null;
        tools?: Array<string> | null;
        foods?: Array<string> | null;
        households?: Array<string> | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        page?: number;
        perPage?: number;
        cookbook?: string | null;
        requireAllCategories?: boolean;
        requireAllTags?: boolean;
        requireAllTools?: boolean;
        requireAllFoods?: boolean;
        search?: string | null;
    };
    url: '/api/explore/groups/{group_slug}/recipes';
};

export type GetAllApiExploreGroupsGroupSlugRecipesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllApiExploreGroupsGroupSlugRecipesGetError = GetAllApiExploreGroupsGroupSlugRecipesGetErrors[keyof GetAllApiExploreGroupsGroupSlugRecipesGetErrors];

export type GetAllApiExploreGroupsGroupSlugRecipesGetResponses = {
    /**
     * Successful Response
     */
    200: PaginationBaseRecipeSummary;
};

export type GetAllApiExploreGroupsGroupSlugRecipesGetResponse = GetAllApiExploreGroupsGroupSlugRecipesGetResponses[keyof GetAllApiExploreGroupsGroupSlugRecipesGetResponses];

export type SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        group_slug: string;
    };
    query?: {
        foods?: Array<string> | null;
        tools?: Array<string> | null;
        orderBy?: string | null;
        orderByNullPosition?: OrderByNullPosition | null;
        orderDirection?: OrderDirection;
        queryFilter?: string | null;
        paginationSeed?: string | null;
        limit?: number;
        maxMissingFoods?: number;
        maxMissingTools?: number;
        includeFoodsOnHand?: boolean;
        includeToolsOnHand?: boolean;
    };
    url: '/api/explore/groups/{group_slug}/recipes/suggestions';
};

export type SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetError = SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetErrors[keyof SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetErrors];

export type SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeSuggestionResponse;
};

export type SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetResponse = SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetResponses[keyof SuggestRecipesApiExploreGroupsGroupSlugRecipesSuggestionsGetResponses];

export type GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetData = {
    body?: never;
    headers?: {
        'accept-language'?: string | null;
    };
    path: {
        recipe_slug: string;
        group_slug: string;
    };
    query?: never;
    url: '/api/explore/groups/{group_slug}/recipes/{recipe_slug}';
};

export type GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetError = GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetErrors[keyof GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetErrors];

export type GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetResponses = {
    /**
     * Successful Response
     */
    200: RecipeOutput;
};

export type GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetResponse = GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetResponses[keyof GetRecipeApiExploreGroupsGroupSlugRecipesRecipeSlugGetResponses];

export type GetRecipeImgApiMediaRecipesRecipeIdImagesFileNameGetData = {
    body?: never;
    path: {
        recipe_id: string;
        file_name: ImageType;
    };
    query?: never;
    url: '/api/media/recipes/{recipe_id}/images/{file_name}';
};

export type GetRecipeImgApiMediaRecipesRecipeIdImagesFileNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeImgApiMediaRecipesRecipeIdImagesFileNameGetError = GetRecipeImgApiMediaRecipesRecipeIdImagesFileNameGetErrors[keyof GetRecipeImgApiMediaRecipesRecipeIdImagesFileNameGetErrors];

export type GetRecipeImgApiMediaRecipesRecipeIdImagesFileNameGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetRecipeTimelineEventImgApiMediaRecipesRecipeIdImagesTimelineTimelineEventIdFileNameGetData = {
    body?: never;
    path: {
        recipe_id: string;
        timeline_event_id: string;
        file_name: ImageType;
    };
    query?: never;
    url: '/api/media/recipes/{recipe_id}/images/timeline/{timeline_event_id}/{file_name}';
};

export type GetRecipeTimelineEventImgApiMediaRecipesRecipeIdImagesTimelineTimelineEventIdFileNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeTimelineEventImgApiMediaRecipesRecipeIdImagesTimelineTimelineEventIdFileNameGetError = GetRecipeTimelineEventImgApiMediaRecipesRecipeIdImagesTimelineTimelineEventIdFileNameGetErrors[keyof GetRecipeTimelineEventImgApiMediaRecipesRecipeIdImagesTimelineTimelineEventIdFileNameGetErrors];

export type GetRecipeTimelineEventImgApiMediaRecipesRecipeIdImagesTimelineTimelineEventIdFileNameGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetRecipeAssetApiMediaRecipesRecipeIdAssetsFileNameGetData = {
    body?: never;
    path: {
        recipe_id: string;
        file_name: string;
    };
    query?: never;
    url: '/api/media/recipes/{recipe_id}/assets/{file_name}';
};

export type GetRecipeAssetApiMediaRecipesRecipeIdAssetsFileNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetRecipeAssetApiMediaRecipesRecipeIdAssetsFileNameGetError = GetRecipeAssetApiMediaRecipesRecipeIdAssetsFileNameGetErrors[keyof GetRecipeAssetApiMediaRecipesRecipeIdAssetsFileNameGetErrors];

export type GetRecipeAssetApiMediaRecipesRecipeIdAssetsFileNameGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserImageApiMediaUsersUserIdFileNameGetData = {
    body?: never;
    path: {
        user_id: string;
        file_name: string;
    };
    query?: never;
    url: '/api/media/users/{user_id}/{file_name}';
};

export type GetUserImageApiMediaUsersUserIdFileNameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserImageApiMediaUsersUserIdFileNameGetError = GetUserImageApiMediaUsersUserIdFileNameGetErrors[keyof GetUserImageApiMediaUsersUserIdFileNameGetErrors];

export type GetUserImageApiMediaUsersUserIdFileNameGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetValidationTextApiMediaDockerValidateTxtGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/media/docker/validate.txt';
};

export type GetValidationTextApiMediaDockerValidateTxtGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type DownloadFileApiUtilsDownloadGetData = {
    body?: never;
    path?: never;
    query?: {
        token?: string | null;
    };
    url: '/api/utils/download';
};

export type DownloadFileApiUtilsDownloadGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DownloadFileApiUtilsDownloadGetError = DownloadFileApiUtilsDownloadGetErrors[keyof DownloadFileApiUtilsDownloadGetErrors];

export type DownloadFileApiUtilsDownloadGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://mealie:9000' | (string & {});
};